asm_test::atomic_memcpy_load_align16::acquire:
 push    {r11, lr}
 mov     r11, sp
 sub     sp, sp, #40
 bfc     sp, #0, #4
 mov     lr, sp
 add     r3, lr, #28
 add     r12, r1, #28
 @APP
 ldr     r2, [r12]
 str     r2, [r3]
 @NO_APP
 add     r2, r1, #24
 add     r3, lr, #24
 @APP
 ldr     r2, [r2]
 str     r2, [r3]
 @NO_APP
 add     r2, r1, #20
 add     r3, lr, #20
 @APP
 ldr     r2, [r2]
 str     r2, [r3]
 @NO_APP
 add     r2, r1, #16
 add     r3, lr, #16
 @APP
 ldr     r2, [r2]
 str     r2, [r3]
 @NO_APP
 add     r2, r1, #12
 orr     r3, lr, #12
 @APP
 ldr     r2, [r2]
 str     r2, [r3]
 @NO_APP
 add     r2, r1, #8
 orr     r3, lr, #8
 @APP
 ldr     r2, [r2]
 str     r2, [r3]
 @NO_APP
 add     r2, r1, #4
 orr     r3, lr, #4
 @APP
 ldr     r2, [r2]
 str     r2, [r3]
 @NO_APP
 mov     r2, lr
 @APP
 ldr     r1, [r1]
 str     r1, [r2]
 @NO_APP
 ldm     lr!, {r1, r2, r3, r12}
 stm     r0!, {r1, r2, r3, r12}
 ldm     lr, {r1, r2, r3, r12}
 stm     r0, {r1, r2, r3, r12}
 dmb     ish
 mov     sp, r11
 pop     {r11, pc}
asm_test::atomic_memcpy_load_align16::read_volatile_acquire_fence:
 push    {r4, r5, r6, r7, r8, r9, r11, lr}
 ldrd    r8, r9, [r1, #24]
 ldrd    r4, r5, [r1, #16]
 ldrd    r6, r7, [r1, #8]
 ldrd    r2, r3, [r1]
 stm     r0!, {r2, r3, r6, r7}
 stm     r0, {r4, r5, r8, r9}
 dmb     ish
 pop     {r4, r5, r6, r7, r8, r9, r11, pc}
