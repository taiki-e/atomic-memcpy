asm_test::atomic_memcpy_load_align2::acquire:
 push    esi
 sub     esp, 32
 mov     eax, dword, ptr, [esp, +, 40]
 mov     ecx, dword, ptr, [esp, +, 44]
 lea     edx, [ecx, +, 30]
 lea     esi, [esp, +, 30]
 #APP
 mov     dx, word, ptr, [edx]
 mov     word, ptr, [esi], dx
 #NO_APP
 lea     edx, [ecx, +, 28]
 lea     esi, [esp, +, 28]
 #APP
 mov     dx, word, ptr, [edx]
 mov     word, ptr, [esi], dx
 #NO_APP
 lea     edx, [ecx, +, 26]
 lea     esi, [esp, +, 26]
 #APP
 mov     dx, word, ptr, [edx]
 mov     word, ptr, [esi], dx
 #NO_APP
 lea     edx, [ecx, +, 24]
 lea     esi, [esp, +, 24]
 #APP
 mov     dx, word, ptr, [edx]
 mov     word, ptr, [esi], dx
 #NO_APP
 lea     edx, [ecx, +, 22]
 lea     esi, [esp, +, 22]
 #APP
 mov     dx, word, ptr, [edx]
 mov     word, ptr, [esi], dx
 #NO_APP
 lea     edx, [ecx, +, 20]
 lea     esi, [esp, +, 20]
 #APP
 mov     dx, word, ptr, [edx]
 mov     word, ptr, [esi], dx
 #NO_APP
 lea     edx, [ecx, +, 18]
 lea     esi, [esp, +, 18]
 #APP
 mov     dx, word, ptr, [edx]
 mov     word, ptr, [esi], dx
 #NO_APP
 lea     edx, [ecx, +, 16]
 lea     esi, [esp, +, 16]
 #APP
 mov     dx, word, ptr, [edx]
 mov     word, ptr, [esi], dx
 #NO_APP
 lea     edx, [ecx, +, 14]
 lea     esi, [esp, +, 14]
 #APP
 mov     dx, word, ptr, [edx]
 mov     word, ptr, [esi], dx
 #NO_APP
 lea     edx, [ecx, +, 12]
 lea     esi, [esp, +, 12]
 #APP
 mov     dx, word, ptr, [edx]
 mov     word, ptr, [esi], dx
 #NO_APP
 lea     edx, [ecx, +, 10]
 lea     esi, [esp, +, 10]
 #APP
 mov     dx, word, ptr, [edx]
 mov     word, ptr, [esi], dx
 #NO_APP
 lea     edx, [ecx, +, 8]
 lea     esi, [esp, +, 8]
 #APP
 mov     dx, word, ptr, [edx]
 mov     word, ptr, [esi], dx
 #NO_APP
 lea     edx, [ecx, +, 6]
 lea     esi, [esp, +, 6]
 #APP
 mov     dx, word, ptr, [edx]
 mov     word, ptr, [esi], dx
 #NO_APP
 lea     edx, [ecx, +, 4]
 lea     esi, [esp, +, 4]
 #APP
 mov     dx, word, ptr, [edx]
 mov     word, ptr, [esi], dx
 #NO_APP
 lea     edx, [ecx, +, 2]
 lea     esi, [esp, +, 2]
 #APP
 mov     dx, word, ptr, [edx]
 mov     word, ptr, [esi], dx
 #NO_APP
 mov     edx, esp
 #APP
 mov     cx, word, ptr, [ecx]
 mov     word, ptr, [edx], cx
 #NO_APP
 mov     ecx, dword, ptr, [esp]
 mov     edx, dword, ptr, [esp, +, 4]
 mov     dword, ptr, [eax], ecx
 mov     dword, ptr, [eax, +, 4], edx
 mov     ecx, dword, ptr, [esp, +, 8]
 mov     dword, ptr, [eax, +, 8], ecx
 mov     ecx, dword, ptr, [esp, +, 12]
 mov     dword, ptr, [eax, +, 12], ecx
 mov     ecx, dword, ptr, [esp, +, 16]
 mov     dword, ptr, [eax, +, 16], ecx
 mov     ecx, dword, ptr, [esp, +, 20]
 mov     dword, ptr, [eax, +, 20], ecx
 mov     ecx, dword, ptr, [esp, +, 24]
 mov     dword, ptr, [eax, +, 24], ecx
 mov     ecx, dword, ptr, [esp, +, 28]
 mov     dword, ptr, [eax, +, 28], ecx
 #MEMBARRIER
 add     esp, 32
 pop     esi
 ret     4
asm_test::atomic_memcpy_load_align2::read_volatile_acquire_fence:
 push    ebp
 push    ebx
 push    edi
 push    esi
 sub     esp, 20
 mov     eax, dword, ptr, [esp, +, 44]
 movzx   ecx, word, ptr, [eax, +, 30]
 mov     word, ptr, [esp, +, 18], cx
 movzx   ecx, word, ptr, [eax, +, 28]
 mov     word, ptr, [esp, +, 16], cx
 movzx   ecx, word, ptr, [eax, +, 26]
 mov     word, ptr, [esp, +, 14], cx
 movzx   ecx, word, ptr, [eax, +, 24]
 mov     word, ptr, [esp, +, 12], cx
 movzx   ecx, word, ptr, [eax, +, 22]
 mov     word, ptr, [esp, +, 10], cx
 movzx   ecx, word, ptr, [eax, +, 20]
 mov     word, ptr, [esp, +, 8], cx
 movzx   ecx, word, ptr, [eax, +, 18]
 mov     word, ptr, [esp, +, 6], cx
 movzx   ecx, word, ptr, [eax, +, 16]
 mov     word, ptr, [esp, +, 4], cx
 movzx   ecx, word, ptr, [eax, +, 14]
 mov     word, ptr, [esp, +, 2], cx
 movzx   ecx, word, ptr, [eax, +, 12]
 mov     word, ptr, [esp], cx
 movzx   ebp, word, ptr, [eax, +, 10]
 movzx   ebx, word, ptr, [eax, +, 8]
 movzx   edi, word, ptr, [eax, +, 6]
 movzx   esi, word, ptr, [eax, +, 4]
 movzx   ecx, word, ptr, [eax]
 movzx   edx, word, ptr, [eax, +, 2]
 mov     eax, dword, ptr, [esp, +, 40]
 mov     word, ptr, [eax], cx
 mov     word, ptr, [eax, +, 2], dx
 mov     word, ptr, [eax, +, 4], si
 mov     word, ptr, [eax, +, 6], di
 mov     word, ptr, [eax, +, 8], bx
 mov     word, ptr, [eax, +, 10], bp
 movzx   ecx, word, ptr, [esp]
 mov     word, ptr, [eax, +, 12], cx
 movzx   ecx, word, ptr, [esp, +, 2]
 mov     word, ptr, [eax, +, 14], cx
 movzx   ecx, word, ptr, [esp, +, 4]
 mov     word, ptr, [eax, +, 16], cx
 movzx   ecx, word, ptr, [esp, +, 6]
 mov     word, ptr, [eax, +, 18], cx
 movzx   ecx, word, ptr, [esp, +, 8]
 mov     word, ptr, [eax, +, 20], cx
 movzx   ecx, word, ptr, [esp, +, 10]
 mov     word, ptr, [eax, +, 22], cx
 movzx   ecx, word, ptr, [esp, +, 12]
 mov     word, ptr, [eax, +, 24], cx
 movzx   ecx, word, ptr, [esp, +, 14]
 mov     word, ptr, [eax, +, 26], cx
 movzx   ecx, word, ptr, [esp, +, 16]
 mov     word, ptr, [eax, +, 28], cx
 movzx   ecx, word, ptr, [esp, +, 18]
 mov     word, ptr, [eax, +, 30], cx
 #MEMBARRIER
 add     esp, 20
 pop     esi
 pop     edi
 pop     ebx
 pop     ebp
 ret     4
