asm_test::atomic_memcpy_store_align2::release:
 push    ebx
 push    esi
 sub     esp, 68
 mov     eax, dword, ptr, [esp, +, 80]
 mov     ecx, dword, ptr, [esp, +, 84]
 mov     edx, dword, ptr, [ecx, +, 28]
 mov     dword, ptr, [esp, +, 64], edx
 mov     edx, dword, ptr, [ecx, +, 24]
 mov     dword, ptr, [esp, +, 60], edx
 mov     edx, dword, ptr, [ecx, +, 20]
 mov     dword, ptr, [esp, +, 56], edx
 mov     edx, dword, ptr, [ecx, +, 16]
 mov     dword, ptr, [esp, +, 52], edx
 mov     edx, dword, ptr, [ecx, +, 12]
 mov     dword, ptr, [esp, +, 48], edx
 mov     edx, dword, ptr, [ecx, +, 8]
 mov     dword, ptr, [esp, +, 44], edx
 mov     edx, dword, ptr, [ecx]
 mov     ecx, dword, ptr, [ecx, +, 4]
 mov     dword, ptr, [esp, +, 40], ecx
 mov     dword, ptr, [esp, +, 36], edx
 #MEMBARRIER
 mov     ecx, dword, ptr, [esp, +, 64]
 mov     dword, ptr, [esp, +, 28], ecx
 mov     ecx, dword, ptr, [esp, +, 60]
 mov     dword, ptr, [esp, +, 24], ecx
 mov     ecx, dword, ptr, [esp, +, 56]
 mov     dword, ptr, [esp, +, 20], ecx
 mov     ecx, dword, ptr, [esp, +, 52]
 mov     dword, ptr, [esp, +, 16], ecx
 mov     ecx, dword, ptr, [esp, +, 48]
 mov     dword, ptr, [esp, +, 12], ecx
 mov     ecx, dword, ptr, [esp, +, 44]
 mov     dword, ptr, [esp, +, 8], ecx
 mov     ecx, dword, ptr, [esp, +, 36]
 mov     edx, dword, ptr, [esp, +, 40]
 mov     dword, ptr, [esp, +, 4], edx
 mov     dword, ptr, [esp], ecx
 lea     edx, [eax, +, 3]
 and     edx, -4
 mov     ecx, edx
 sub     ecx, eax
 cmp     ecx, 33
 jae     .LBB6_1
 cmp     edx, eax
 jne     .LBB6_5
 mov     edx, 32
 xor     ecx, ecx
 jmp     .LBB6_4
.LBB6_1:
 movzx   ecx, word, ptr, [esp, +, 30]
 mov     word, ptr, [eax, +, 30], cx
 movzx   ecx, word, ptr, [esp, +, 28]
 mov     word, ptr, [eax, +, 28], cx
 movzx   ecx, word, ptr, [esp, +, 26]
 mov     word, ptr, [eax, +, 26], cx
 movzx   ecx, word, ptr, [esp, +, 24]
 mov     word, ptr, [eax, +, 24], cx
 movzx   ecx, word, ptr, [esp, +, 22]
 mov     word, ptr, [eax, +, 22], cx
 movzx   ecx, word, ptr, [esp, +, 20]
 mov     word, ptr, [eax, +, 20], cx
 movzx   ecx, word, ptr, [esp, +, 18]
 mov     word, ptr, [eax, +, 18], cx
 movzx   ecx, word, ptr, [esp, +, 16]
 mov     word, ptr, [eax, +, 16], cx
 movzx   ecx, word, ptr, [esp, +, 14]
 mov     word, ptr, [eax, +, 14], cx
 movzx   ecx, word, ptr, [esp, +, 12]
 mov     word, ptr, [eax, +, 12], cx
 movzx   ecx, word, ptr, [esp, +, 10]
 mov     word, ptr, [eax, +, 10], cx
 movzx   ecx, word, ptr, [esp, +, 8]
 mov     word, ptr, [eax, +, 8], cx
 movzx   ecx, word, ptr, [esp, +, 6]
 mov     word, ptr, [eax, +, 6], cx
 movzx   ecx, word, ptr, [esp, +, 4]
 mov     word, ptr, [eax, +, 4], cx
 movzx   ecx, word, ptr, [esp, +, 2]
 mov     word, ptr, [eax, +, 2], cx
 movzx   ecx, word, ptr, [esp]
 mov     word, ptr, [eax], cx
 jmp     .LBB6_13
.LBB6_5:
 cmp     ecx, 2
 jae     .LBB6_7
 mov     ecx, 1
.LBB6_7:
 xor     edx, edx
.LBB6_8:
 movzx   ebx, byte, ptr, [esp, +, edx]
 mov     byte, ptr, [eax, +, edx], bl
 inc     edx
 cmp     ecx, edx
 jne     .LBB6_8
 mov     edx, 32
 sub     edx, ecx
 cmp     edx, 4
 jb      .LBB6_10
.LBB6_4:
 mov     esi, dword, ptr, [esp, +, ecx]
 mov     dword, ptr, [eax, +, ecx], esi
 add     edx, -4
 add     ecx, 4
 cmp     edx, 3
 ja      .LBB6_4
.LBB6_10:
 test    edx, edx
 je      .LBB6_13
 add     eax, ecx
 add     ecx, esp
 xor     esi, esi
.LBB6_12:
 movzx   ebx, byte, ptr, [ecx, +, esi]
 mov     byte, ptr, [eax, +, esi], bl
 inc     esi
 cmp     edx, esi
 jne     .LBB6_12
.LBB6_13:
 add     esp, 68
 pop     esi
 pop     ebx
 ret
asm_test::atomic_memcpy_store_align2::write_volatile_release_fence:
 sub     esp, 32
 mov     eax, dword, ptr, [esp, +, 36]
 mov     ecx, dword, ptr, [esp, +, 40]
 #MEMBARRIER
 mov     edx, dword, ptr, [ecx, +, 28]
 mov     dword, ptr, [esp, +, 28], edx
 mov     edx, dword, ptr, [ecx, +, 24]
 mov     dword, ptr, [esp, +, 24], edx
 mov     edx, dword, ptr, [ecx, +, 20]
 mov     dword, ptr, [esp, +, 20], edx
 mov     edx, dword, ptr, [ecx, +, 16]
 mov     dword, ptr, [esp, +, 16], edx
 mov     edx, dword, ptr, [ecx, +, 12]
 mov     dword, ptr, [esp, +, 12], edx
 mov     edx, dword, ptr, [ecx, +, 8]
 mov     dword, ptr, [esp, +, 8], edx
 mov     edx, dword, ptr, [ecx]
 mov     ecx, dword, ptr, [ecx, +, 4]
 mov     dword, ptr, [esp, +, 4], ecx
 mov     dword, ptr, [esp], edx
 mov     ecx, dword, ptr, [esp, +, 28]
 mov     dword, ptr, [eax, +, 28], ecx
 mov     ecx, dword, ptr, [esp, +, 24]
 mov     dword, ptr, [eax, +, 24], ecx
 mov     ecx, dword, ptr, [esp, +, 20]
 mov     dword, ptr, [eax, +, 20], ecx
 mov     ecx, dword, ptr, [esp, +, 16]
 mov     dword, ptr, [eax, +, 16], ecx
 mov     ecx, dword, ptr, [esp, +, 12]
 mov     dword, ptr, [eax, +, 12], ecx
 mov     ecx, dword, ptr, [esp, +, 8]
 mov     dword, ptr, [eax, +, 8], ecx
 mov     ecx, dword, ptr, [esp, +, 4]
 mov     dword, ptr, [eax, +, 4], ecx
 mov     ecx, dword, ptr, [esp]
 mov     dword, ptr, [eax], ecx
 add     esp, 32
 ret
