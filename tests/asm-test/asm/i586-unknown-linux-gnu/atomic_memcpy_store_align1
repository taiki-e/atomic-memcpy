asm_test::atomic_memcpy_store_align1::release:
 sub     esp, 68
 mov     eax, dword, ptr, [esp, +, 72]
 mov     ecx, dword, ptr, [esp, +, 76]
 mov     edx, dword, ptr, [ecx, +, 28]
 mov     dword, ptr, [esp, +, 64], edx
 mov     edx, dword, ptr, [ecx, +, 24]
 mov     dword, ptr, [esp, +, 60], edx
 mov     edx, dword, ptr, [ecx, +, 20]
 mov     dword, ptr, [esp, +, 56], edx
 mov     edx, dword, ptr, [ecx, +, 16]
 mov     dword, ptr, [esp, +, 52], edx
 mov     edx, dword, ptr, [ecx, +, 12]
 mov     dword, ptr, [esp, +, 48], edx
 mov     edx, dword, ptr, [ecx, +, 8]
 mov     dword, ptr, [esp, +, 44], edx
 mov     edx, dword, ptr, [ecx]
 mov     ecx, dword, ptr, [ecx, +, 4]
 mov     dword, ptr, [esp, +, 40], ecx
 mov     dword, ptr, [esp, +, 36], edx
 #MEMBARRIER
 mov     ecx, dword, ptr, [esp, +, 64]
 mov     dword, ptr, [esp, +, 28], ecx
 mov     ecx, dword, ptr, [esp, +, 60]
 mov     dword, ptr, [esp, +, 24], ecx
 mov     ecx, dword, ptr, [esp, +, 56]
 mov     dword, ptr, [esp, +, 20], ecx
 mov     ecx, dword, ptr, [esp, +, 52]
 mov     dword, ptr, [esp, +, 16], ecx
 mov     ecx, dword, ptr, [esp, +, 48]
 mov     dword, ptr, [esp, +, 12], ecx
 mov     ecx, dword, ptr, [esp, +, 44]
 mov     dword, ptr, [esp, +, 8], ecx
 mov     ecx, dword, ptr, [esp, +, 36]
 mov     edx, dword, ptr, [esp, +, 40]
 mov     dword, ptr, [esp, +, 4], edx
 mov     dword, ptr, [esp], ecx
 lea     ecx, [eax, +, 31]
 lea     edx, [esp, +, 31]
 #APP
 mov     dl, byte, ptr, [edx]
 mov     byte, ptr, [ecx], dl
 #NO_APP
 lea     ecx, [eax, +, 30]
 lea     edx, [esp, +, 30]
 #APP
 mov     dl, byte, ptr, [edx]
 mov     byte, ptr, [ecx], dl
 #NO_APP
 lea     ecx, [eax, +, 29]
 lea     edx, [esp, +, 29]
 #APP
 mov     dl, byte, ptr, [edx]
 mov     byte, ptr, [ecx], dl
 #NO_APP
 lea     ecx, [esp, +, 28]
 lea     edx, [eax, +, 28]
 #APP
 mov     cl, byte, ptr, [ecx]
 mov     byte, ptr, [edx], cl
 #NO_APP
 lea     ecx, [eax, +, 27]
 lea     edx, [esp, +, 27]
 #APP
 mov     dl, byte, ptr, [edx]
 mov     byte, ptr, [ecx], dl
 #NO_APP
 lea     ecx, [eax, +, 26]
 lea     edx, [esp, +, 26]
 #APP
 mov     dl, byte, ptr, [edx]
 mov     byte, ptr, [ecx], dl
 #NO_APP
 lea     ecx, [eax, +, 25]
 lea     edx, [esp, +, 25]
 #APP
 mov     dl, byte, ptr, [edx]
 mov     byte, ptr, [ecx], dl
 #NO_APP
 lea     ecx, [esp, +, 24]
 lea     edx, [eax, +, 24]
 #APP
 mov     cl, byte, ptr, [ecx]
 mov     byte, ptr, [edx], cl
 #NO_APP
 lea     ecx, [eax, +, 23]
 lea     edx, [esp, +, 23]
 #APP
 mov     dl, byte, ptr, [edx]
 mov     byte, ptr, [ecx], dl
 #NO_APP
 lea     ecx, [eax, +, 22]
 lea     edx, [esp, +, 22]
 #APP
 mov     dl, byte, ptr, [edx]
 mov     byte, ptr, [ecx], dl
 #NO_APP
 lea     ecx, [eax, +, 21]
 lea     edx, [esp, +, 21]
 #APP
 mov     dl, byte, ptr, [edx]
 mov     byte, ptr, [ecx], dl
 #NO_APP
 lea     ecx, [esp, +, 20]
 lea     edx, [eax, +, 20]
 #APP
 mov     cl, byte, ptr, [ecx]
 mov     byte, ptr, [edx], cl
 #NO_APP
 lea     ecx, [eax, +, 19]
 lea     edx, [esp, +, 19]
 #APP
 mov     dl, byte, ptr, [edx]
 mov     byte, ptr, [ecx], dl
 #NO_APP
 lea     ecx, [eax, +, 18]
 lea     edx, [esp, +, 18]
 #APP
 mov     dl, byte, ptr, [edx]
 mov     byte, ptr, [ecx], dl
 #NO_APP
 lea     ecx, [eax, +, 17]
 lea     edx, [esp, +, 17]
 #APP
 mov     dl, byte, ptr, [edx]
 mov     byte, ptr, [ecx], dl
 #NO_APP
 lea     ecx, [esp, +, 16]
 lea     edx, [eax, +, 16]
 #APP
 mov     cl, byte, ptr, [ecx]
 mov     byte, ptr, [edx], cl
 #NO_APP
 lea     ecx, [eax, +, 15]
 lea     edx, [esp, +, 15]
 #APP
 mov     dl, byte, ptr, [edx]
 mov     byte, ptr, [ecx], dl
 #NO_APP
 lea     ecx, [eax, +, 14]
 lea     edx, [esp, +, 14]
 #APP
 mov     dl, byte, ptr, [edx]
 mov     byte, ptr, [ecx], dl
 #NO_APP
 lea     ecx, [eax, +, 13]
 lea     edx, [esp, +, 13]
 #APP
 mov     dl, byte, ptr, [edx]
 mov     byte, ptr, [ecx], dl
 #NO_APP
 lea     ecx, [esp, +, 12]
 lea     edx, [eax, +, 12]
 #APP
 mov     cl, byte, ptr, [ecx]
 mov     byte, ptr, [edx], cl
 #NO_APP
 lea     ecx, [eax, +, 11]
 lea     edx, [esp, +, 11]
 #APP
 mov     dl, byte, ptr, [edx]
 mov     byte, ptr, [ecx], dl
 #NO_APP
 lea     ecx, [eax, +, 10]
 lea     edx, [esp, +, 10]
 #APP
 mov     dl, byte, ptr, [edx]
 mov     byte, ptr, [ecx], dl
 #NO_APP
 lea     ecx, [eax, +, 9]
 lea     edx, [esp, +, 9]
 #APP
 mov     dl, byte, ptr, [edx]
 mov     byte, ptr, [ecx], dl
 #NO_APP
 lea     ecx, [esp, +, 8]
 lea     edx, [eax, +, 8]
 #APP
 mov     cl, byte, ptr, [ecx]
 mov     byte, ptr, [edx], cl
 #NO_APP
 lea     ecx, [eax, +, 7]
 lea     edx, [esp, +, 7]
 #APP
 mov     dl, byte, ptr, [edx]
 mov     byte, ptr, [ecx], dl
 #NO_APP
 lea     ecx, [eax, +, 6]
 lea     edx, [esp, +, 6]
 #APP
 mov     dl, byte, ptr, [edx]
 mov     byte, ptr, [ecx], dl
 #NO_APP
 lea     ecx, [eax, +, 5]
 lea     edx, [esp, +, 5]
 #APP
 mov     dl, byte, ptr, [edx]
 mov     byte, ptr, [ecx], dl
 #NO_APP
 lea     ecx, [esp, +, 4]
 lea     edx, [eax, +, 4]
 #APP
 mov     cl, byte, ptr, [ecx]
 mov     byte, ptr, [edx], cl
 #NO_APP
 lea     ecx, [eax, +, 3]
 lea     edx, [esp, +, 3]
 #APP
 mov     dl, byte, ptr, [edx]
 mov     byte, ptr, [ecx], dl
 #NO_APP
 lea     ecx, [eax, +, 2]
 lea     edx, [esp, +, 2]
 #APP
 mov     dl, byte, ptr, [edx]
 mov     byte, ptr, [ecx], dl
 #NO_APP
 lea     ecx, [eax, +, 1]
 lea     edx, [esp, +, 1]
 #APP
 mov     dl, byte, ptr, [edx]
 mov     byte, ptr, [ecx], dl
 #NO_APP
 mov     ecx, esp
 #APP
 mov     cl, byte, ptr, [ecx]
 mov     byte, ptr, [eax], cl
 #NO_APP
 add     esp, 68
 ret
asm_test::atomic_memcpy_store_align1::write_volatile_release_fence:
 sub     esp, 32
 mov     eax, dword, ptr, [esp, +, 36]
 mov     ecx, dword, ptr, [esp, +, 40]
 #MEMBARRIER
 mov     edx, dword, ptr, [ecx, +, 28]
 mov     dword, ptr, [esp, +, 28], edx
 mov     edx, dword, ptr, [ecx, +, 24]
 mov     dword, ptr, [esp, +, 24], edx
 mov     edx, dword, ptr, [ecx, +, 20]
 mov     dword, ptr, [esp, +, 20], edx
 mov     edx, dword, ptr, [ecx, +, 16]
 mov     dword, ptr, [esp, +, 16], edx
 mov     edx, dword, ptr, [ecx, +, 12]
 mov     dword, ptr, [esp, +, 12], edx
 mov     edx, dword, ptr, [ecx, +, 8]
 mov     dword, ptr, [esp, +, 8], edx
 mov     edx, dword, ptr, [ecx]
 mov     ecx, dword, ptr, [ecx, +, 4]
 mov     dword, ptr, [esp, +, 4], ecx
 mov     dword, ptr, [esp], edx
 mov     ecx, dword, ptr, [esp, +, 28]
 mov     dword, ptr, [eax, +, 28], ecx
 mov     ecx, dword, ptr, [esp, +, 24]
 mov     dword, ptr, [eax, +, 24], ecx
 mov     ecx, dword, ptr, [esp, +, 20]
 mov     dword, ptr, [eax, +, 20], ecx
 mov     ecx, dword, ptr, [esp, +, 16]
 mov     dword, ptr, [eax, +, 16], ecx
 mov     ecx, dword, ptr, [esp, +, 12]
 mov     dword, ptr, [eax, +, 12], ecx
 mov     ecx, dword, ptr, [esp, +, 8]
 mov     dword, ptr, [eax, +, 8], ecx
 mov     ecx, dword, ptr, [esp, +, 4]
 mov     dword, ptr, [eax, +, 4], ecx
 mov     ecx, dword, ptr, [esp]
 mov     dword, ptr, [eax], ecx
 add     esp, 32
 ret
