asm_test::atomic_memcpy_store_align8::release:
 push    ebx
 push    edi
 push    esi
 sub     esp, 64
 mov     ecx, dword, ptr, [esp, +, 84]
 mov     eax, dword, ptr, [esp, +, 80]
 lea     ebx, [esp, +, 28]
 lea     esi, [esp, +, 24]
 lea     edx, [esp, +, 16]
 movsd   xmm1, qword, ptr, [ecx, +, 16]
 movsd   xmm0, qword, ptr, [ecx, +, 24]
 movsd   xmm3, qword, ptr, [ecx]
 lea     edi, [eax, +, 28]
 movsd   qword, ptr, [esp, +, 48], xmm1
 movsd   xmm1, qword, ptr, [ecx, +, 8]
 movsd   qword, ptr, [esp, +, 56], xmm0
 movsd   qword, ptr, [esp, +, 32], xmm3
 lea     ecx, [esp, +, 8]
 movsd   qword, ptr, [esp, +, 40], xmm1
 #MEMBARRIER
 movsd   xmm2, qword, ptr, [esp, +, 56]
 movsd   xmm1, qword, ptr, [esp, +, 48]
 movsd   qword, ptr, [esp, +, 24], xmm2
 movsd   qword, ptr, [esp, +, 16], xmm1
 movsd   xmm2, qword, ptr, [esp, +, 32]
 movsd   xmm1, qword, ptr, [esp, +, 40]
 movsd   qword, ptr, [esp, +, 8], xmm1
 movsd   qword, ptr, [esp], xmm2
 #APP
 mov     ebx, dword, ptr, [ebx]
 mov     dword, ptr, [edi], ebx
 #NO_APP
 lea     edi, [eax, +, 24]
 #APP
 mov     esi, dword, ptr, [esi]
 mov     dword, ptr, [edi], esi
 #NO_APP
 lea     esi, [eax, +, 20]
 lea     edi, [esp, +, 20]
 #APP
 mov     edi, dword, ptr, [edi]
 mov     dword, ptr, [esi], edi
 #NO_APP
 lea     esi, [eax, +, 16]
 #APP
 mov     edx, dword, ptr, [edx]
 mov     dword, ptr, [esi], edx
 #NO_APP
 lea     edx, [eax, +, 12]
 lea     esi, [esp, +, 12]
 #APP
 mov     esi, dword, ptr, [esi]
 mov     dword, ptr, [edx], esi
 #NO_APP
 lea     edx, [eax, +, 8]
 #APP
 mov     ecx, dword, ptr, [ecx]
 mov     dword, ptr, [edx], ecx
 #NO_APP
 lea     ecx, [eax, +, 4]
 lea     edx, [esp, +, 4]
 #APP
 mov     edx, dword, ptr, [edx]
 mov     dword, ptr, [ecx], edx
 #NO_APP
 mov     ecx, esp
 #APP
 mov     ecx, dword, ptr, [ecx]
 mov     dword, ptr, [eax], ecx
 #NO_APP
 add     esp, 64
 pop     esi
 pop     edi
 pop     ebx
 ret
asm_test::atomic_memcpy_store_align8::write_volatile_release_fence:
 sub     esp, 36
 mov     ecx, dword, ptr, [esp, +, 44]
 #MEMBARRIER
 mov     eax, dword, ptr, [esp, +, 40]
 movsd   xmm0, qword, ptr, [ecx, +, 24]
 movsd   xmm1, qword, ptr, [ecx, +, 8]
 movsd   qword, ptr, [esp, +, 24], xmm0
 movsd   xmm0, qword, ptr, [ecx, +, 16]
 movsd   qword, ptr, [esp, +, 8], xmm1
 movsd   qword, ptr, [esp, +, 16], xmm0
 movsd   xmm0, qword, ptr, [ecx]
 movsd   qword, ptr, [esp], xmm0
 movsd   xmm0, qword, ptr, [esp, +, 24]
 movsd   qword, ptr, [eax, +, 24], xmm0
 movsd   xmm0, qword, ptr, [esp, +, 16]
 movsd   qword, ptr, [eax, +, 16], xmm0
 movsd   xmm0, qword, ptr, [esp, +, 8]
 movsd   qword, ptr, [eax, +, 8], xmm0
 movsd   xmm0, qword, ptr, [esp]
 movsd   qword, ptr, [eax], xmm0
 add     esp, 36
 ret
