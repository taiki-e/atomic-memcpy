asm_test::atomic_memcpy_store_align2::release:
 push    ebx
 push    esi
 sub     esp, 68
 mov     ecx, dword, ptr, [esp, +, 84]
 mov     eax, dword, ptr, [esp, +, 80]
 movsd   xmm1, qword, ptr, [ecx, +, 16]
 movsd   xmm0, qword, ptr, [ecx, +, 24]
 movsd   xmm3, qword, ptr, [ecx]
 movsd   qword, ptr, [esp, +, 52], xmm1
 movsd   xmm1, qword, ptr, [ecx, +, 8]
 movsd   qword, ptr, [esp, +, 60], xmm0
 movsd   qword, ptr, [esp, +, 36], xmm3
 lea     ecx, [eax, +, 3]
 and     ecx, -4
 mov     edx, ecx
 sub     edx, eax
 movsd   qword, ptr, [esp, +, 44], xmm1
 #MEMBARRIER
 movsd   xmm2, qword, ptr, [esp, +, 60]
 movsd   xmm1, qword, ptr, [esp, +, 52]
 cmp     edx, 33
 movsd   qword, ptr, [esp, +, 24], xmm2
 movsd   qword, ptr, [esp, +, 16], xmm1
 movsd   xmm2, qword, ptr, [esp, +, 36]
 movsd   xmm1, qword, ptr, [esp, +, 44]
 movsd   qword, ptr, [esp, +, 8], xmm1
 movsd   qword, ptr, [esp], xmm2
 jae     .LBB6_1
 cmp     ecx, eax
 jne     .LBB6_10
 mov     edx, 32
 xor     ecx, ecx
 jmp     .LBB6_5
.LBB6_1:
 movzx   ecx, word, ptr, [esp, +, 30]
 mov     word, ptr, [eax, +, 30], cx
 movzx   ecx, word, ptr, [esp, +, 28]
 mov     word, ptr, [eax, +, 28], cx
 movzx   ecx, word, ptr, [esp, +, 26]
 mov     word, ptr, [eax, +, 26], cx
 movzx   ecx, word, ptr, [esp, +, 24]
 mov     word, ptr, [eax, +, 24], cx
 movzx   ecx, word, ptr, [esp, +, 22]
 mov     word, ptr, [eax, +, 22], cx
 movzx   ecx, word, ptr, [esp, +, 20]
 mov     word, ptr, [eax, +, 20], cx
 movzx   ecx, word, ptr, [esp, +, 18]
 mov     word, ptr, [eax, +, 18], cx
 movzx   ecx, word, ptr, [esp, +, 16]
 mov     word, ptr, [eax, +, 16], cx
 movzx   ecx, word, ptr, [esp, +, 14]
 mov     word, ptr, [eax, +, 14], cx
 movzx   ecx, word, ptr, [esp, +, 12]
 mov     word, ptr, [eax, +, 12], cx
 movzx   ecx, word, ptr, [esp, +, 10]
 mov     word, ptr, [eax, +, 10], cx
 movzx   ecx, word, ptr, [esp, +, 8]
 mov     word, ptr, [eax, +, 8], cx
 movzx   ecx, word, ptr, [esp, +, 6]
 mov     word, ptr, [eax, +, 6], cx
 movzx   ecx, word, ptr, [esp, +, 4]
 mov     word, ptr, [eax, +, 4], cx
 movzx   ecx, word, ptr, [esp, +, 2]
 mov     word, ptr, [eax, +, 2], cx
 movzx   ecx, word, ptr, [esp]
 mov     word, ptr, [eax], cx
 jmp     .LBB6_2
.LBB6_10:
 cmp     edx, 2
 mov     ecx, 1
 cmovae  ecx, edx
 xor     edx, edx
.LBB6_11:
 movzx   ebx, byte, ptr, [esp, +, edx]
 mov     byte, ptr, [eax, +, edx], bl
 inc     edx
 cmp     ecx, edx
 jne     .LBB6_11
 mov     edx, 32
 sub     edx, ecx
 cmp     edx, 4
 jb      .LBB6_7
.LBB6_5:
 mov     esi, dword, ptr, [esp, +, ecx]
 add     edx, -4
 mov     dword, ptr, [eax, +, ecx], esi
 add     ecx, 4
 cmp     edx, 3
 ja      .LBB6_5
.LBB6_7:
 test    edx, edx
 je      .LBB6_2
 add     eax, ecx
 add     ecx, esp
 xor     esi, esi
.LBB6_9:
 movzx   ebx, byte, ptr, [ecx, +, esi]
 mov     byte, ptr, [eax, +, esi], bl
 inc     esi
 cmp     edx, esi
 jne     .LBB6_9
.LBB6_2:
 add     esp, 68
 pop     esi
 pop     ebx
 ret
asm_test::atomic_memcpy_store_align2::write_volatile_release_fence:
 sub     esp, 32
 mov     ecx, dword, ptr, [esp, +, 40]
 #MEMBARRIER
 mov     eax, dword, ptr, [esp, +, 36]
 movsd   xmm0, qword, ptr, [ecx, +, 24]
 movsd   xmm1, qword, ptr, [ecx, +, 8]
 movsd   qword, ptr, [esp, +, 24], xmm0
 movsd   xmm0, qword, ptr, [ecx, +, 16]
 movsd   qword, ptr, [esp, +, 8], xmm1
 movsd   qword, ptr, [esp, +, 16], xmm0
 movsd   xmm0, qword, ptr, [ecx]
 movsd   qword, ptr, [esp], xmm0
 movsd   xmm0, qword, ptr, [esp, +, 24]
 movsd   qword, ptr, [eax, +, 24], xmm0
 movsd   xmm0, qword, ptr, [esp, +, 16]
 movsd   qword, ptr, [eax, +, 16], xmm0
 movsd   xmm0, qword, ptr, [esp, +, 8]
 movsd   qword, ptr, [eax, +, 8], xmm0
 movsd   xmm0, qword, ptr, [esp]
 movsd   qword, ptr, [eax], xmm0
 add     esp, 32
 ret
