asm_test::atomic_memcpy_load_align4::acquire:
 push    esi
 sub     esp, 32
 mov     ecx, dword, ptr, [esp, +, 44]
 lea     esi, [esp, +, 28]
 mov     eax, dword, ptr, [esp, +, 40]
 lea     edx, [ecx, +, 28]
 #APP
 mov     edx, dword, ptr, [edx]
 mov     dword, ptr, [esi], edx
 #NO_APP
 lea     edx, [ecx, +, 24]
 lea     esi, [esp, +, 24]
 #APP
 mov     edx, dword, ptr, [edx]
 mov     dword, ptr, [esi], edx
 #NO_APP
 lea     edx, [ecx, +, 20]
 lea     esi, [esp, +, 20]
 #APP
 mov     edx, dword, ptr, [edx]
 mov     dword, ptr, [esi], edx
 #NO_APP
 lea     edx, [ecx, +, 16]
 lea     esi, [esp, +, 16]
 #APP
 mov     edx, dword, ptr, [edx]
 mov     dword, ptr, [esi], edx
 #NO_APP
 lea     edx, [ecx, +, 12]
 lea     esi, [esp, +, 12]
 #APP
 mov     edx, dword, ptr, [edx]
 mov     dword, ptr, [esi], edx
 #NO_APP
 lea     edx, [ecx, +, 8]
 lea     esi, [esp, +, 8]
 #APP
 mov     edx, dword, ptr, [edx]
 mov     dword, ptr, [esi], edx
 #NO_APP
 lea     edx, [ecx, +, 4]
 lea     esi, [esp, +, 4]
 #APP
 mov     edx, dword, ptr, [edx]
 mov     dword, ptr, [esi], edx
 #NO_APP
 mov     edx, esp
 #APP
 mov     ecx, dword, ptr, [ecx]
 mov     dword, ptr, [edx], ecx
 #NO_APP
 movsd   xmm1, qword, ptr, [esp, +, 8]
 movsd   xmm0, qword, ptr, [esp]
 movsd   xmm2, qword, ptr, [esp, +, 16]
 movsd   qword, ptr, [eax, +, 8], xmm1
 movsd   xmm1, qword, ptr, [esp, +, 24]
 movsd   qword, ptr, [eax], xmm0
 movsd   qword, ptr, [eax, +, 16], xmm2
 movsd   qword, ptr, [eax, +, 24], xmm1
 #MEMBARRIER
 add     esp, 32
 pop     esi
 ret     4
asm_test::atomic_memcpy_load_align4::read_volatile_acquire_fence:
 push    ebp
 push    ebx
 push    edi
 push    esi
 sub     esp, 8
 mov     eax, dword, ptr, [esp, +, 32]
 mov     ecx, dword, ptr, [eax, +, 28]
 mov     dword, ptr, [esp, +, 4], ecx
 mov     ecx, dword, ptr, [eax, +, 24]
 mov     dword, ptr, [esp], ecx
 mov     esi, dword, ptr, [eax, +, 20]
 mov     edi, dword, ptr, [eax, +, 16]
 mov     ebx, dword, ptr, [eax, +, 12]
 mov     ebp, dword, ptr, [eax, +, 8]
 mov     ecx, dword, ptr, [eax]
 mov     edx, dword, ptr, [eax, +, 4]
 mov     eax, dword, ptr, [esp, +, 28]
 mov     dword, ptr, [eax], ecx
 mov     dword, ptr, [eax, +, 4], edx
 mov     dword, ptr, [eax, +, 8], ebp
 mov     dword, ptr, [eax, +, 12], ebx
 mov     dword, ptr, [eax, +, 16], edi
 mov     dword, ptr, [eax, +, 20], esi
 mov     esi, dword, ptr, [esp]
 mov     edx, dword, ptr, [esp, +, 4]
 mov     dword, ptr, [eax, +, 24], esi
 mov     dword, ptr, [eax, +, 28], edx
 #MEMBARRIER
 add     esp, 8
 pop     esi
 pop     edi
 pop     ebx
 pop     ebp
 ret     4
