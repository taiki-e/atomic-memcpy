asm_test::atomic_memcpy_store_align2::release:
 sub     esp, 72
 movups  xmm0, xmmword, ptr, [esi]
 movups  xmm1, xmmword, ptr, [esi, +, 16]
 movaps  xmmword, ptr, [esp, +, 48], xmm1
 movaps  xmmword, ptr, [esp, +, 32], xmm0
 #MEMBARRIER
 movaps  xmm0, xmmword, ptr, [esp, +, 32]
 movaps  xmm1, xmmword, ptr, [esp, +, 48]
 movaps  xmmword, ptr, [esp, +, 16], xmm1
 movaps  xmmword, ptr, [esp], xmm0
 lea     r8d, [rdi, +, 3]
 and     r8d, -4
 mov     r11d, r8d
 sub     r11d, edi
 cmp     r11d, 32
 ja      .LBB6_19
 test    r11d, r11d
 je      .LBB6_2
 mov     ecx, edi
 not     ecx
 add     ecx, r8d
 mov     r9d, r11d
 and     r9d, 3
 xor     esi, esi
 cmp     ecx, 3
 jb      .LBB6_7
 mov     ecx, r11d
 and     ecx, -4
 xor     edx, edx
.LBB6_6:
 movzx   eax, byte, ptr, [esp, +, edx]
 mov     byte, ptr, [edi, +, edx], al
 movzx   eax, byte, ptr, [esp, +, edx, +, 1]
 mov     byte, ptr, [edi, +, edx, +, 1], al
 movzx   eax, byte, ptr, [esp, +, edx, +, 2]
 mov     byte, ptr, [edi, +, edx, +, 2], al
 lea     esi, [rdx, +, 4]
 movzx   eax, byte, ptr, [esp, +, edx, +, 3]
 mov     byte, ptr, [edi, +, edx, +, 3], al
 mov     edx, esi
 cmp     ecx, esi
 jne     .LBB6_6
.LBB6_7:
 lea     ecx, [rdi, +, 32]
 test    r9d, r9d
 je      .LBB6_10
 lea     r10d, [rdi, +, rsi]
 add     esi, esp
 xor     edx, edx
.LBB6_9:
 movzx   eax, byte, ptr, [esi, +, edx]
 mov     byte, ptr, [r10d, +, edx], al
 add     edx, 1
 cmp     r9d, edx
 jne     .LBB6_9
.LBB6_10:
 sub     ecx, r8d
 cmp     ecx, 4
 jae     .LBB6_3
 jmp     .LBB6_11
.LBB6_19:
 movzx   eax, word, ptr, [esp, +, 30]
 mov     word, ptr, [edi, +, 30], ax
 movzx   eax, word, ptr, [esp, +, 28]
 mov     word, ptr, [edi, +, 28], ax
 movzx   eax, word, ptr, [esp, +, 26]
 mov     word, ptr, [edi, +, 26], ax
 movzx   eax, word, ptr, [esp, +, 24]
 mov     word, ptr, [edi, +, 24], ax
 movzx   eax, word, ptr, [esp, +, 22]
 mov     word, ptr, [edi, +, 22], ax
 movzx   eax, word, ptr, [esp, +, 20]
 mov     word, ptr, [edi, +, 20], ax
 movzx   eax, word, ptr, [esp, +, 18]
 mov     word, ptr, [edi, +, 18], ax
 movzx   eax, word, ptr, [esp, +, 16]
 mov     word, ptr, [edi, +, 16], ax
 movzx   eax, word, ptr, [esp, +, 14]
 mov     word, ptr, [edi, +, 14], ax
 movzx   eax, word, ptr, [esp, +, 12]
 mov     word, ptr, [edi, +, 12], ax
 movzx   eax, word, ptr, [esp, +, 10]
 mov     word, ptr, [edi, +, 10], ax
 movzx   eax, word, ptr, [esp, +, 8]
 mov     word, ptr, [edi, +, 8], ax
 movzx   eax, word, ptr, [esp, +, 6]
 mov     word, ptr, [edi, +, 6], ax
 movzx   eax, word, ptr, [esp, +, 4]
 mov     word, ptr, [edi, +, 4], ax
 movzx   eax, word, ptr, [esp, +, 2]
 mov     word, ptr, [edi, +, 2], ax
 movzx   eax, word, ptr, [esp]
 mov     word, ptr, [edi], ax
 add     esp, 72
 ret
.LBB6_2:
 mov     ecx, 32
.LBB6_3:
 mov     eax, dword, ptr, [esp, +, r11d]
 mov     dword, ptr, [edi, +, r11d], eax
 add     ecx, -4
 add     r11d, 4
 cmp     ecx, 3
 ja      .LBB6_3
.LBB6_11:
 test    ecx, ecx
 je      .LBB6_18
 lea     r8d, [rcx, -, 1]
 mov     esi, ecx
 mov     edx, r11d
 and     esi, 3
 je      .LBB6_15
 mov     edx, r11d
.LBB6_14:
 movzx   eax, byte, ptr, [esp, +, edx]
 mov     byte, ptr, [edi, +, edx], al
 add     edx, 1
 add     esi, -1
 jne     .LBB6_14
.LBB6_15:
 cmp     r8d, 3
 jb      .LBB6_18
 add     ecx, r11d
.LBB6_17:
 movzx   eax, byte, ptr, [esp, +, edx]
 mov     byte, ptr, [edi, +, edx], al
 movzx   eax, byte, ptr, [esp, +, edx, +, 1]
 mov     byte, ptr, [edi, +, edx, +, 1], al
 movzx   eax, byte, ptr, [esp, +, edx, +, 2]
 mov     byte, ptr, [edi, +, edx, +, 2], al
 movzx   eax, byte, ptr, [esp, +, edx, +, 3]
 mov     byte, ptr, [edi, +, edx, +, 3], al
 add     edx, 4
 cmp     ecx, edx
 jne     .LBB6_17
.LBB6_18:
 add     esp, 72
 ret
asm_test::atomic_memcpy_store_align2::write_volatile_release_fence:
 sub     esp, 40
 #MEMBARRIER
 movups  xmm0, xmmword, ptr, [esi]
 movups  xmm1, xmmword, ptr, [esi, +, 16]
 movaps  xmmword, ptr, [esp, +, 16], xmm1
 movaps  xmmword, ptr, [esp], xmm0
 movaps  xmm0, xmmword, ptr, [esp, +, 16]
 movups  xmmword, ptr, [edi, +, 16], xmm0
 movaps  xmm0, xmmword, ptr, [esp]
 movups  xmmword, ptr, [edi], xmm0
 add     esp, 40
 ret
