asm_test::atomic_memcpy_load_align8::acquire:
 sub     esp, 32
 mov     rax, rdi
 lea     ecx, [rsi, +, 28]
 lea     edx, [rsp, +, 28]
 #APP
 mov     ecx, dword, ptr, [ecx]
 mov     dword, ptr, [edx], ecx
 #NO_APP
 lea     ecx, [rsi, +, 24]
 lea     edx, [rsp, +, 24]
 #APP
 mov     ecx, dword, ptr, [ecx]
 mov     dword, ptr, [edx], ecx
 #NO_APP
 lea     ecx, [rsi, +, 20]
 lea     edx, [rsp, +, 20]
 #APP
 mov     ecx, dword, ptr, [ecx]
 mov     dword, ptr, [edx], ecx
 #NO_APP
 lea     ecx, [rsi, +, 16]
 lea     edx, [rsp, +, 16]
 #APP
 mov     ecx, dword, ptr, [ecx]
 mov     dword, ptr, [edx], ecx
 #NO_APP
 lea     ecx, [rsi, +, 12]
 lea     edx, [rsp, +, 12]
 #APP
 mov     ecx, dword, ptr, [ecx]
 mov     dword, ptr, [edx], ecx
 #NO_APP
 lea     ecx, [rsi, +, 8]
 lea     edx, [rsp, +, 8]
 #APP
 mov     ecx, dword, ptr, [ecx]
 mov     dword, ptr, [edx], ecx
 #NO_APP
 lea     ecx, [rsi, +, 4]
 lea     edx, [rsp, +, 4]
 #APP
 mov     ecx, dword, ptr, [ecx]
 mov     dword, ptr, [edx], ecx
 #NO_APP
 mov     ecx, esp
 #APP
 mov     edx, dword, ptr, [esi]
 mov     dword, ptr, [ecx], edx
 #NO_APP
 movups  xmm0, xmmword, ptr, [esp]
 movups  xmm1, xmmword, ptr, [esp, +, 16]
 movups  xmmword, ptr, [eax], xmm0
 movups  xmmword, ptr, [eax, +, 16], xmm1
 #MEMBARRIER
 add     esp, 32
 ret
asm_test::atomic_memcpy_load_align8::read_volatile_acquire_fence:
 mov     rax, rdi
 mov     rcx, qword, ptr, [esi, +, 24]
 mov     rdx, qword, ptr, [esi, +, 16]
 mov     rdi, qword, ptr, [esi]
 mov     rsi, qword, ptr, [esi, +, 8]
 mov     qword, ptr, [eax], rdi
 mov     qword, ptr, [eax, +, 8], rsi
 mov     qword, ptr, [eax, +, 16], rdx
 mov     qword, ptr, [eax, +, 24], rcx
 #MEMBARRIER
 ret
