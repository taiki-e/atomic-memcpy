asm_test::atomic_memcpy_store_align1::release:
 sub     esp, 72
 movups  xmm0, xmmword, ptr, [esi]
 movups  xmm1, xmmword, ptr, [esi, +, 16]
 movaps  xmmword, ptr, [esp, +, 48], xmm1
 movaps  xmmword, ptr, [esp, +, 32], xmm0
 #MEMBARRIER
 movaps  xmm0, xmmword, ptr, [esp, +, 32]
 movaps  xmm1, xmmword, ptr, [esp, +, 48]
 movaps  xmmword, ptr, [esp, +, 16], xmm1
 movaps  xmmword, ptr, [esp], xmm0
 lea     eax, [rsp, +, 16]
 lea     ecx, [rdi, +, 31]
 lea     edx, [rsp, +, 31]
 #APP
 mov     dl, byte, ptr, [edx]
 mov     byte, ptr, [ecx], dl
 #NO_APP
 lea     ecx, [rdi, +, 30]
 lea     edx, [rsp, +, 30]
 #APP
 mov     dl, byte, ptr, [edx]
 mov     byte, ptr, [ecx], dl
 #NO_APP
 lea     ecx, [rdi, +, 29]
 lea     edx, [rsp, +, 29]
 #APP
 mov     dl, byte, ptr, [edx]
 mov     byte, ptr, [ecx], dl
 #NO_APP
 lea     ecx, [rdi, +, 28]
 lea     edx, [rsp, +, 28]
 #APP
 mov     dl, byte, ptr, [edx]
 mov     byte, ptr, [ecx], dl
 #NO_APP
 lea     ecx, [rdi, +, 27]
 lea     edx, [rsp, +, 27]
 #APP
 mov     dl, byte, ptr, [edx]
 mov     byte, ptr, [ecx], dl
 #NO_APP
 lea     ecx, [rdi, +, 26]
 lea     edx, [rsp, +, 26]
 #APP
 mov     dl, byte, ptr, [edx]
 mov     byte, ptr, [ecx], dl
 #NO_APP
 lea     ecx, [rdi, +, 25]
 lea     edx, [rsp, +, 25]
 #APP
 mov     dl, byte, ptr, [edx]
 mov     byte, ptr, [ecx], dl
 #NO_APP
 lea     ecx, [rdi, +, 24]
 lea     edx, [rsp, +, 24]
 #APP
 mov     dl, byte, ptr, [edx]
 mov     byte, ptr, [ecx], dl
 #NO_APP
 lea     ecx, [rdi, +, 23]
 lea     edx, [rsp, +, 23]
 #APP
 mov     dl, byte, ptr, [edx]
 mov     byte, ptr, [ecx], dl
 #NO_APP
 lea     ecx, [rdi, +, 22]
 lea     edx, [rsp, +, 22]
 #APP
 mov     dl, byte, ptr, [edx]
 mov     byte, ptr, [ecx], dl
 #NO_APP
 lea     ecx, [rdi, +, 21]
 lea     edx, [rsp, +, 21]
 #APP
 mov     dl, byte, ptr, [edx]
 mov     byte, ptr, [ecx], dl
 #NO_APP
 lea     ecx, [rdi, +, 20]
 lea     edx, [rsp, +, 20]
 #APP
 mov     dl, byte, ptr, [edx]
 mov     byte, ptr, [ecx], dl
 #NO_APP
 lea     ecx, [rdi, +, 19]
 lea     edx, [rsp, +, 19]
 #APP
 mov     dl, byte, ptr, [edx]
 mov     byte, ptr, [ecx], dl
 #NO_APP
 lea     ecx, [rdi, +, 18]
 lea     edx, [rsp, +, 18]
 #APP
 mov     dl, byte, ptr, [edx]
 mov     byte, ptr, [ecx], dl
 #NO_APP
 lea     ecx, [rdi, +, 17]
 lea     edx, [rsp, +, 17]
 #APP
 mov     dl, byte, ptr, [edx]
 mov     byte, ptr, [ecx], dl
 #NO_APP
 lea     ecx, [rdi, +, 16]
 #APP
 mov     al, byte, ptr, [eax]
 mov     byte, ptr, [ecx], al
 #NO_APP
 lea     eax, [rdi, +, 15]
 lea     ecx, [rsp, +, 15]
 #APP
 mov     cl, byte, ptr, [ecx]
 mov     byte, ptr, [eax], cl
 #NO_APP
 lea     eax, [rdi, +, 14]
 lea     ecx, [rsp, +, 14]
 #APP
 mov     cl, byte, ptr, [ecx]
 mov     byte, ptr, [eax], cl
 #NO_APP
 lea     eax, [rdi, +, 13]
 lea     ecx, [rsp, +, 13]
 #APP
 mov     cl, byte, ptr, [ecx]
 mov     byte, ptr, [eax], cl
 #NO_APP
 lea     eax, [rdi, +, 12]
 lea     ecx, [rsp, +, 12]
 #APP
 mov     cl, byte, ptr, [ecx]
 mov     byte, ptr, [eax], cl
 #NO_APP
 lea     eax, [rdi, +, 11]
 lea     ecx, [rsp, +, 11]
 #APP
 mov     cl, byte, ptr, [ecx]
 mov     byte, ptr, [eax], cl
 #NO_APP
 lea     eax, [rdi, +, 10]
 lea     ecx, [rsp, +, 10]
 #APP
 mov     cl, byte, ptr, [ecx]
 mov     byte, ptr, [eax], cl
 #NO_APP
 lea     eax, [rdi, +, 9]
 lea     ecx, [rsp, +, 9]
 #APP
 mov     cl, byte, ptr, [ecx]
 mov     byte, ptr, [eax], cl
 #NO_APP
 lea     eax, [rdi, +, 8]
 lea     ecx, [rsp, +, 8]
 #APP
 mov     cl, byte, ptr, [ecx]
 mov     byte, ptr, [eax], cl
 #NO_APP
 lea     eax, [rdi, +, 7]
 lea     ecx, [rsp, +, 7]
 #APP
 mov     cl, byte, ptr, [ecx]
 mov     byte, ptr, [eax], cl
 #NO_APP
 lea     eax, [rdi, +, 6]
 lea     ecx, [rsp, +, 6]
 #APP
 mov     cl, byte, ptr, [ecx]
 mov     byte, ptr, [eax], cl
 #NO_APP
 lea     eax, [rdi, +, 5]
 lea     ecx, [rsp, +, 5]
 #APP
 mov     cl, byte, ptr, [ecx]
 mov     byte, ptr, [eax], cl
 #NO_APP
 lea     eax, [rdi, +, 4]
 lea     ecx, [rsp, +, 4]
 #APP
 mov     cl, byte, ptr, [ecx]
 mov     byte, ptr, [eax], cl
 #NO_APP
 lea     eax, [rdi, +, 3]
 lea     ecx, [rsp, +, 3]
 #APP
 mov     cl, byte, ptr, [ecx]
 mov     byte, ptr, [eax], cl
 #NO_APP
 lea     eax, [rdi, +, 2]
 lea     ecx, [rsp, +, 2]
 #APP
 mov     cl, byte, ptr, [ecx]
 mov     byte, ptr, [eax], cl
 #NO_APP
 lea     eax, [rdi, +, 1]
 lea     ecx, [rsp, +, 1]
 #APP
 mov     cl, byte, ptr, [ecx]
 mov     byte, ptr, [eax], cl
 #NO_APP
 mov     eax, esp
 #APP
 mov     al, byte, ptr, [eax]
 mov     byte, ptr, [edi], al
 #NO_APP
 add     esp, 72
 ret
asm_test::atomic_memcpy_store_align1::write_volatile_release_fence:
 sub     esp, 40
 #MEMBARRIER
 movups  xmm0, xmmword, ptr, [esi]
 movups  xmm1, xmmword, ptr, [esi, +, 16]
 movaps  xmmword, ptr, [esp, +, 16], xmm1
 movaps  xmmword, ptr, [esp], xmm0
 movaps  xmm0, xmmword, ptr, [esp, +, 16]
 movups  xmmword, ptr, [edi, +, 16], xmm0
 movaps  xmm0, xmmword, ptr, [esp]
 movups  xmmword, ptr, [edi], xmm0
 add     esp, 40
 ret
