asm_test::atomic_memcpy_load_align4::acquire:
 push    {r4, r5, r11, lr}
 sub     sp, sp, #32
 mov     r5, r0
 mov     r3, sp
 add     r4, r3, #28
 mov     r0, #0
 add     lr, r1, #28
 @APP
 ldr     r2, [lr]
 str     r2, [r4]
 @NO_APP
 mov     r12, #0
 add     r2, r1, #24
 add     r4, r3, #24
 mov     r0, #0
 @APP
 ldr     r2, [r2]
 str     r2, [r4]
 @NO_APP
 add     r2, r1, #20
 add     r4, r3, #20
 mov     r0, #0
 @APP
 ldr     r2, [r2]
 str     r2, [r4]
 @NO_APP
 add     r2, r1, #16
 add     r4, r3, #16
 mov     r0, #0
 @APP
 ldr     r2, [r2]
 str     r2, [r4]
 @NO_APP
 add     r2, r1, #12
 add     r4, r3, #12
 mov     r0, #0
 @APP
 ldr     r2, [r2]
 str     r2, [r4]
 @NO_APP
 add     r2, r1, #8
 add     r4, r3, #8
 mov     r0, #0
 @APP
 ldr     r2, [r2]
 str     r2, [r4]
 @NO_APP
 add     r2, r1, #4
 orr     r4, r3, #4
 mov     r0, #0
 @APP
 ldr     r2, [r2]
 str     r2, [r4]
 @NO_APP
 mov     r2, r3
 mov     r0, #0
 @APP
 ldr     r1, [r1]
 str     r1, [r2]
 @NO_APP
 ldm     r3!, {r0, r1, r2, r4}
 stm     r5!, {r0, r1, r2, r4}
 ldm     r3, {r0, r1, r2, r4}
 stm     r5, {r0, r1, r2, r4}
 mcr     p15, #0, r12, c7, c10, #5
 add     sp, sp, #32
 pop     {r4, r5, r11, pc}
asm_test::atomic_memcpy_load_align4::read_volatile_acquire_fence:
 push    {r4, r5, r6, lr}
 ldr     r12, [r1, #28]
 ldr     lr, [r1, #24]
 ldr     r2, [r1, #20]
 ldr     r3, [r1, #16]
 ldr     r4, [r1]
 ldr     r5, [r1, #4]
 ldr     r6, [r1, #8]
 ldr     r1, [r1, #12]
 stm     r0, {r4, r5, r6}
 str     r1, [r0, #12]
 str     r3, [r0, #16]
 str     r2, [r0, #20]
 str     lr, [r0, #24]
 str     r12, [r0, #28]
 mov     r0, #0
 mcr     p15, #0, r0, c7, c10, #5
 pop     {r4, r5, r6, pc}
