asm_test::atomic_memcpy_store_align2::release:
 push    {r4, r5, r6, r7, r8, r9, r11, lr}
 sub     sp, sp, #64
 mov     r8, sp
 mov     r9, r0
 mov     r0, r8
 mov     r2, #32
 mov     r6, #32
 bl      memcpy
 mov     r0, #0
 add     r1, sp, #32
 mcr     p15, #0, r0, c7, c10, #5
 ldm     r8!, {r3, r4, r5, r7}
 mov     r2, r1
 stm     r2!, {r3, r4, r5, r7}
 ldm     r8, {r3, r4, r5, r7}
 stm     r2, {r3, r4, r5, r7}
 add     r2, r9, #3
 bic     r3, r2, #3
 sub     r2, r3, r9
 cmp     r2, #33
 bhs     .LBB6_11
 cmp     r3, r9
 beq     .LBB6_5
 cmp     r2, #1
 mov     r0, r2
 movls   r0, #1
 mov     r3, r9
 mov     r2, r0
.LBB6_3:
 ldrb    r7, [r1], #1
 subs    r2, r2, #1
 strb    r7, [r3]
 add     r3, r3, #1
 bne     .LBB6_3
 rsb     r6, r0, #32
 cmp     r6, #4
 blo     .LBB6_7
.LBB6_5:
 add     r1, sp, #32
.LBB6_6:
 add     r3, r1, r0
 ldrb    r2, [r1, r0]
 sub     r6, r6, #4
 ldrb    r7, [r3, #1]
 cmp     r6, #3
 ldrb    r5, [r3, #2]
 ldrb    r3, [r3, #3]
 orr     r2, r2, r7, lsl, #8
 orr     r3, r5, r3, lsl, #8
 orr     r2, r2, r3, lsl, #16
 str     r2, [r9, r0]
 add     r0, r0, #4
 bhi     .LBB6_6
.LBB6_7:
 cmp     r6, #0
 beq     .LBB6_10
 add     r1, sp, #32
 add     r1, r1, r0
 add     r0, r9, r0
.LBB6_9:
 ldrb    r2, [r1], #1
 subs    r6, r6, #1
 strb    r2, [r0]
 add     r0, r0, #1
 bne     .LBB6_9
.LBB6_10:
 add     sp, sp, #64
 pop     {r4, r5, r6, r7, r8, r9, r11, pc}
.LBB6_11:
 ldrh    r0, [sp, #62]
 strh    r0, [r9, #30]
 ldrh    r0, [sp, #60]
 strh    r0, [r9, #28]
 ldrh    r0, [sp, #58]
 strh    r0, [r9, #26]
 ldrh    r0, [sp, #56]
 strh    r0, [r9, #24]
 ldrh    r0, [sp, #54]
 strh    r0, [r9, #22]
 ldrh    r0, [sp, #52]
 strh    r0, [r9, #20]
 ldrh    r0, [sp, #50]
 strh    r0, [r9, #18]
 ldrh    r0, [sp, #48]
 strh    r0, [r9, #16]
 ldrh    r0, [sp, #46]
 strh    r0, [r9, #14]
 ldrh    r0, [sp, #44]
 strh    r0, [r9, #12]
 ldrh    r0, [sp, #42]
 strh    r0, [r9, #10]
 ldrh    r0, [sp, #40]
 strh    r0, [r9, #8]
 ldrh    r0, [sp, #38]
 strh    r0, [r9, #6]
 ldrh    r0, [sp, #36]
 strh    r0, [r9, #4]
 ldrh    r0, [sp, #34]
 strh    r0, [r9, #2]
 ldrh    r0, [sp, #32]
 strh    r0, [r9]
 add     sp, sp, #64
 pop     {r4, r5, r6, r7, r8, r9, r11, pc}
asm_test::atomic_memcpy_store_align2::write_volatile_release_fence:
 push    {r4, r5, r11, lr}
 sub     sp, sp, #32
 mov     r4, r0
 mov     r0, #0
 mov     r5, sp
 mcr     p15, #0, r0, c7, c10, #5
 mov     r0, r5
 mov     r2, #32
 bl      memcpy
 mov     r0, r4
 mov     r1, r5
 mov     r2, #32
 bl      memcpy
 add     sp, sp, #32
 pop     {r4, r5, r11, pc}
