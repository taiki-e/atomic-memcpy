asm_test::atomic_memcpy_load_align2::acquire:
 push    {r4, r5, r6, lr}
 sub     sp, sp, #32
 mov     r2, r0
 mov     r3, r1
 add     r4, r1, #30
 mov     r1, sp
 add     r5, r1, #30
 mov     r0, #0
 @APP
 ldrh    r4, [r4]
 strh    r4, [r5]
 @NO_APP
 mov     r6, #0
 add     r5, r3, #28
 add     r4, r1, #28
 mov     r0, #0
 @APP
 ldrh    r5, [r5]
 strh    r5, [r4]
 @NO_APP
 add     r5, r3, #26
 add     r4, r1, #26
 mov     r0, #0
 @APP
 ldrh    r5, [r5]
 strh    r5, [r4]
 @NO_APP
 add     r5, r3, #24
 add     r4, r1, #24
 mov     r0, #0
 @APP
 ldrh    r5, [r5]
 strh    r5, [r4]
 @NO_APP
 add     r5, r3, #22
 add     r4, r1, #22
 mov     r0, #0
 @APP
 ldrh    r5, [r5]
 strh    r5, [r4]
 @NO_APP
 add     r5, r3, #20
 add     r4, r1, #20
 mov     r0, #0
 @APP
 ldrh    r5, [r5]
 strh    r5, [r4]
 @NO_APP
 add     r5, r3, #18
 add     r4, r1, #18
 mov     r0, #0
 @APP
 ldrh    r5, [r5]
 strh    r5, [r4]
 @NO_APP
 add     r5, r3, #16
 add     r4, r1, #16
 mov     r0, #0
 @APP
 ldrh    r5, [r5]
 strh    r5, [r4]
 @NO_APP
 add     r5, r3, #14
 add     r4, r1, #14
 mov     r0, #0
 @APP
 ldrh    r5, [r5]
 strh    r5, [r4]
 @NO_APP
 add     r5, r3, #12
 add     r4, r1, #12
 mov     r0, #0
 @APP
 ldrh    r5, [r5]
 strh    r5, [r4]
 @NO_APP
 add     r5, r3, #10
 add     r4, r1, #10
 mov     r0, #0
 @APP
 ldrh    r5, [r5]
 strh    r5, [r4]
 @NO_APP
 add     r5, r3, #8
 add     r4, r1, #8
 mov     r0, #0
 @APP
 ldrh    r5, [r5]
 strh    r5, [r4]
 @NO_APP
 add     r5, r3, #6
 orr     r4, r1, #6
 mov     r0, #0
 @APP
 ldrh    r5, [r5]
 strh    r5, [r4]
 @NO_APP
 add     r5, r3, #4
 orr     r4, r1, #4
 mov     r0, #0
 @APP
 ldrh    r5, [r5]
 strh    r5, [r4]
 @NO_APP
 add     r5, r3, #2
 orr     r4, r1, #2
 mov     r0, #0
 @APP
 ldrh    r5, [r5]
 strh    r5, [r4]
 @NO_APP
 mov     r5, r1
 mov     r0, #0
 @APP
 ldrh    r3, [r3]
 strh    r3, [r5]
 @NO_APP
 mov     r0, r2
 mov     r2, #32
 bl      memcpy
 mcr     p15, #0, r6, c7, c10, #5
 add     sp, sp, #32
 pop     {r4, r5, r6, pc}
asm_test::atomic_memcpy_load_align2::read_volatile_acquire_fence:
 ldrh    r2, [r1, #30]
 strh    r2, [r0, #30]
 ldrh    r2, [r1, #28]
 strh    r2, [r0, #28]
 ldrh    r2, [r1, #26]
 strh    r2, [r0, #26]
 ldrh    r2, [r1, #24]
 strh    r2, [r0, #24]
 ldrh    r2, [r1, #22]
 strh    r2, [r0, #22]
 ldrh    r2, [r1, #20]
 strh    r2, [r0, #20]
 ldrh    r2, [r1, #18]
 strh    r2, [r0, #18]
 ldrh    r2, [r1, #16]
 strh    r2, [r0, #16]
 ldrh    r2, [r1, #14]
 strh    r2, [r0, #14]
 ldrh    r2, [r1, #12]
 strh    r2, [r0, #12]
 ldrh    r2, [r1, #10]
 strh    r2, [r0, #10]
 ldrh    r2, [r1, #8]
 strh    r2, [r0, #8]
 ldrh    r2, [r1, #6]
 strh    r2, [r0, #6]
 ldrh    r2, [r1, #4]
 strh    r2, [r0, #4]
 ldrh    r2, [r1, #2]
 strh    r2, [r0, #2]
 ldrh    r1, [r1]
 strh    r1, [r0]
 mov     r0, #0
 mcr     p15, #0, r0, c7, c10, #5
 bx      lr
