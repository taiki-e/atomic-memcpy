asm_test::atomic_memcpy_load_align2::acquire:
 sw      ra, 44(sp)
 addi    a2, a1, 3
 andi    a6, a2, -4
 sub     t0, a6, a1
 li      a3, 33
 bltu    t0, a3, .LBB4_2
 lh      a2, 30(a1)
 sh      a2, 38(sp)
 lh      a2, 28(a1)
 sh      a2, 36(sp)
 lh      a2, 26(a1)
 sh      a2, 34(sp)
 lh      a2, 24(a1)
 sh      a2, 32(sp)
 lh      a2, 22(a1)
 sh      a2, 30(sp)
 lh      a2, 20(a1)
 sh      a2, 28(sp)
 lh      a2, 18(a1)
 sh      a2, 26(sp)
 lh      a2, 16(a1)
 sh      a2, 24(sp)
 lh      a2, 14(a1)
 sh      a2, 22(sp)
 lh      a2, 12(a1)
 sh      a2, 20(sp)
 lh      a2, 10(a1)
 sh      a2, 18(sp)
 lh      a2, 8(a1)
 sh      a2, 16(sp)
 lh      a2, 6(a1)
 sh      a2, 14(sp)
 lh      a2, 4(a1)
 sh      a2, 12(sp)
 lh      a2, 2(a1)
 sh      a2, 10(sp)
 lh      a1, 0(a1)
 sh      a1, 8(sp)
 j       .LBB4_12
.LBB4_2:
 beqz    t0, .LBB4_6
 sub     a3, a1, a6
 addi    a4, sp, 8
 mv      a5, a1
.LBB4_4:
 lb      a7, 0(a5)
 mv      a2, a3
 sb      a7, 0(a4)
 addi    a4, a4, 1
 addi    a3, a3, 1
 addi    a5, a5, 1
 bgeu    a3, a2, .LBB4_4
 sub     a2, a1, a6
 addi    a3, a2, 32
 li      a2, 4
 bgeu    a3, a2, .LBB4_7
 j       .LBB4_9
.LBB4_6:
 li      a3, 32
.LBB4_7:
 addi    a6, sp, 8
 li      a7, 3
.LBB4_8:
 add     a2, a1, t0
 lw      a2, 0(a2)
 add     a4, a6, t0
 sb      a2, 0(a4)
 srli    a5, a2, 24
 sb      a5, 3(a4)
 srli    a5, a2, 16
 sb      a5, 2(a4)
 srli    a2, a2, 8
 sb      a2, 1(a4)
 addi    a3, a3, -4
 addi    t0, t0, 4
 bltu    a7, a3, .LBB4_8
.LBB4_9:
 beqz    a3, .LBB4_12
 addi    a2, sp, 8
 add     a4, a2, t0
 add     a1, a1, t0
.LBB4_11:
 lb      a2, 0(a1)
 sb      a2, 0(a4)
 addi    a4, a4, 1
 addi    a3, a3, -1
 addi    a1, a1, 1
 bnez    a3, .LBB4_11
.LBB4_12:
 addi    a1, sp, 8
 li      a2, 32
 call    memcpy@plt
 fence   r, rw
 lw      ra, 44(sp)
 addi    sp, sp, 48
 ret
.LBB6_2:
 beqz    a1, .LBB6_6
 sub     a4, a0, a6
 addi    a3, sp, 32
 mv      a5, a0
.LBB6_4:
 lb      a7, 0(a3)
 mv      a2, a4
 sb      a7, 0(a5)
 addi    a5, a5, 1
 addi    a4, a4, 1
 addi    a3, a3, 1
 bgeu    a4, a2, .LBB6_4
 sub     a2, a0, a6
 addi    a2, a2, 32
 li      a3, 4
 bgeu    a2, a3, .LBB6_7
 j       .LBB6_9
.LBB6_6:
 li      a2, 32
.LBB6_7:
 addi    a6, sp, 32
 li      a7, 3
.LBB6_8:
 add     a5, a6, a1
 lbu     t0, 1(a5)
 lbu     t1, 0(a5)
 lbu     a3, 3(a5)
 lbu     a5, 2(a5)
 slli    a4, t0, 8
 or      a4, a4, t1
 slli    a3, a3, 8
 or      a3, a3, a5
 slli    a3, a3, 16
 or      a3, a3, a4
 add     a4, a0, a1
 sw      a3, 0(a4)
 addi    a2, a2, -4
 addi    a1, a1, 4
 bltu    a7, a2, .LBB6_8
.LBB6_9:
 beqz    a2, .LBB6_12
 add     a0, a0, a1
 addi    a3, sp, 32
 add     a1, a1, a3
.LBB6_11:
 lb      a3, 0(a1)
 sb      a3, 0(a0)
 addi    a0, a0, 1
 addi    a2, a2, -1
 addi    a1, a1, 1
 bnez    a2, .LBB6_11
.LBB6_12:
 addi    sp, sp, 64
 ret
asm_test::atomic_memcpy_load_align2::read_volatile_acquire_fence:
 sw      s0, 12(sp)
 sw      s1, 8(sp)
 lh      a6, 30(a1)
 lh      a7, 28(a1)
 lh      t0, 26(a1)
 lh      t1, 24(a1)
 lh      t2, 22(a1)
 lh      t3, 20(a1)
 lh      t4, 18(a1)
 lh      t5, 16(a1)
 lh      t6, 14(a1)
 lh      a3, 12(a1)
 lh      a4, 10(a1)
 lh      a5, 8(a1)
 lh      a2, 6(a1)
 lh      s0, 4(a1)
 lh      s1, 2(a1)
 lh      a1, 0(a1)
 sh      a1, 0(a0)
 sh      s1, 2(a0)
 sh      s0, 4(a0)
 sh      a2, 6(a0)
 sh      a5, 8(a0)
 sh      a4, 10(a0)
 sh      a3, 12(a0)
 sh      t6, 14(a0)
 sh      t5, 16(a0)
 sh      t4, 18(a0)
 sh      t3, 20(a0)
 sh      t2, 22(a0)
 sh      t1, 24(a0)
 sh      t0, 26(a0)
 sh      a7, 28(a0)
 sh      a6, 30(a0)
 fence   r, rw
 lw      s0, 12(sp)
 lw      s1, 8(sp)
 addi    sp, sp, 16
 ret
.LBB6_2:
 beqz    a1, .LBB6_6
 sub     a4, a0, a6
 addi    a3, sp, 32
 mv      a5, a0
.LBB6_4:
 lb      a7, 0(a3)
 mv      a2, a4
 sb      a7, 0(a5)
 addi    a5, a5, 1
 addi    a4, a4, 1
 addi    a3, a3, 1
 bgeu    a4, a2, .LBB6_4
 sub     a2, a0, a6
 addi    a2, a2, 32
 li      a3, 4
 bgeu    a2, a3, .LBB6_7
 j       .LBB6_9
.LBB6_6:
 li      a2, 32
.LBB6_7:
 addi    a6, sp, 32
 li      a7, 3
.LBB6_8:
 add     a5, a6, a1
 lbu     t0, 1(a5)
 lbu     t1, 0(a5)
 lbu     a3, 3(a5)
 lbu     a5, 2(a5)
 slli    a4, t0, 8
 or      a4, a4, t1
 slli    a3, a3, 8
 or      a3, a3, a5
 slli    a3, a3, 16
 or      a3, a3, a4
 add     a4, a0, a1
 sw      a3, 0(a4)
 addi    a2, a2, -4
 addi    a1, a1, 4
 bltu    a7, a2, .LBB6_8
.LBB6_9:
 beqz    a2, .LBB6_12
 add     a0, a0, a1
 addi    a3, sp, 32
 add     a1, a1, a3
.LBB6_11:
 lb      a3, 0(a1)
 sb      a3, 0(a0)
 addi    a0, a0, 1
 addi    a2, a2, -1
 addi    a1, a1, 1
 bnez    a2, .LBB6_11
.LBB6_12:
 addi    sp, sp, 64
 ret
