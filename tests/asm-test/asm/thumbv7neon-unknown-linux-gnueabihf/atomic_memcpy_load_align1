asm_test::atomic_memcpy_load_align1::acquire:
 push    {r7, lr}
 sub     sp, #32
 mov     lr, sp
 add.w   r3, lr, #31
 add.w   r12, r1, #31
 @APP
 ldrb.w  r2, [r12]
 strb    r2, [r3]
 @NO_APP
 add.w   r2, r1, #30
 add.w   r3, lr, #30
 @APP
 ldrb    r2, [r2]
 strb    r2, [r3]
 @NO_APP
 add.w   r12, lr, #16
 add.w   r2, r1, #29
 add.w   r3, lr, #29
 @APP
 ldrb    r2, [r2]
 strb    r2, [r3]
 @NO_APP
 add.w   r2, r1, #28
 add.w   r3, lr, #28
 @APP
 ldrb    r2, [r2]
 strb    r2, [r3]
 @NO_APP
 add.w   r2, r1, #27
 add.w   r3, lr, #27
 @APP
 ldrb    r2, [r2]
 strb    r2, [r3]
 @NO_APP
 add.w   r2, r1, #26
 add.w   r3, lr, #26
 @APP
 ldrb    r2, [r2]
 strb    r2, [r3]
 @NO_APP
 add.w   r2, r1, #25
 add.w   r3, lr, #25
 @APP
 ldrb    r2, [r2]
 strb    r2, [r3]
 @NO_APP
 add.w   r2, r1, #24
 add.w   r3, lr, #24
 @APP
 ldrb    r2, [r2]
 strb    r2, [r3]
 @NO_APP
 add.w   r2, r1, #23
 add.w   r3, lr, #23
 @APP
 ldrb    r2, [r2]
 strb    r2, [r3]
 @NO_APP
 add.w   r2, r1, #22
 add.w   r3, lr, #22
 @APP
 ldrb    r2, [r2]
 strb    r2, [r3]
 @NO_APP
 add.w   r2, r1, #21
 add.w   r3, lr, #21
 @APP
 ldrb    r2, [r2]
 strb    r2, [r3]
 @NO_APP
 add.w   r2, r1, #20
 add.w   r3, lr, #20
 @APP
 ldrb    r2, [r2]
 strb    r2, [r3]
 @NO_APP
 add.w   r2, r1, #19
 add.w   r3, lr, #19
 @APP
 ldrb    r2, [r2]
 strb    r2, [r3]
 @NO_APP
 add.w   r2, r1, #18
 add.w   r3, lr, #18
 @APP
 ldrb    r2, [r2]
 strb    r2, [r3]
 @NO_APP
 add.w   r2, r1, #17
 add.w   r3, lr, #17
 @APP
 ldrb    r2, [r2]
 strb    r2, [r3]
 @NO_APP
 add.w   r2, r1, #16
 mov     r3, r12
 @APP
 ldrb    r2, [r2]
 strb    r2, [r3]
 @NO_APP
 add.w   r2, r1, #15
 add.w   r3, lr, #15
 @APP
 ldrb    r2, [r2]
 strb    r2, [r3]
 @NO_APP
 add.w   r2, r1, #14
 add.w   r3, lr, #14
 @APP
 ldrb    r2, [r2]
 strb    r2, [r3]
 @NO_APP
 add.w   r2, r1, #13
 add.w   r3, lr, #13
 @APP
 ldrb    r2, [r2]
 strb    r2, [r3]
 @NO_APP
 add.w   r2, r1, #12
 add.w   r3, lr, #12
 @APP
 ldrb    r2, [r2]
 strb    r2, [r3]
 @NO_APP
 add.w   r2, r1, #11
 add.w   r3, lr, #11
 @APP
 ldrb    r2, [r2]
 strb    r2, [r3]
 @NO_APP
 add.w   r2, r1, #10
 add.w   r3, lr, #10
 @APP
 ldrb    r2, [r2]
 strb    r2, [r3]
 @NO_APP
 add.w   r2, r1, #9
 add.w   r3, lr, #9
 @APP
 ldrb    r2, [r2]
 strb    r2, [r3]
 @NO_APP
 add.w   r2, r1, #8
 add.w   r3, lr, #8
 @APP
 ldrb    r2, [r2]
 strb    r2, [r3]
 @NO_APP
 adds    r2, r1, #7
 add.w   r3, lr, #7
 @APP
 ldrb    r2, [r2]
 strb    r2, [r3]
 @NO_APP
 adds    r2, r1, #6
 add.w   r3, lr, #6
 @APP
 ldrb    r2, [r2]
 strb    r2, [r3]
 @NO_APP
 adds    r2, r1, #5
 add.w   r3, lr, #5
 @APP
 ldrb    r2, [r2]
 strb    r2, [r3]
 @NO_APP
 adds    r2, r1, #4
 add.w   r3, lr, #4
 @APP
 ldrb    r2, [r2]
 strb    r2, [r3]
 @NO_APP
 adds    r2, r1, #3
 add.w   r3, lr, #3
 @APP
 ldrb    r2, [r2]
 strb    r2, [r3]
 @NO_APP
 adds    r2, r1, #2
 add.w   r3, lr, #2
 @APP
 ldrb    r2, [r2]
 strb    r2, [r3]
 @NO_APP
 adds    r2, r1, #1
 add.w   r3, lr, #1
 @APP
 ldrb    r2, [r2]
 strb    r2, [r3]
 @NO_APP
 mov     r2, lr
 @APP
 ldrb    r1, [r1]
 strb    r1, [r2]
 @NO_APP
 vld1.64 {d16, d17}, [lr]
 vld1.64 {d18, d19}, [r12]
 vst1.8  {d16, d17}, [r0]!
 vst1.8  {d18, d19}, [r0]
 dmb     ish
 add     sp, #32
 pop     {r7, pc}
asm_test::atomic_memcpy_load_align1::read_volatile_acquire_fence:
 push.w  {r4, r5, r6, r7, r8, r9, r10, r11, lr}
 sub     sp, #76
 ldrb    r2, [r1]
 str     r2, [sp, #72]
 ldrb    r2, [r1, #1]
 str     r2, [sp, #68]
 ldrb    r2, [r1, #2]
 str     r2, [sp, #64]
 ldrb    r2, [r1, #3]
 str     r2, [sp, #60]
 ldrb    r2, [r1, #4]
 str     r2, [sp, #56]
 ldrb    r2, [r1, #5]
 str     r2, [sp, #52]
 ldrb    r2, [r1, #6]
 str     r2, [sp, #48]
 ldrb    r2, [r1, #7]
 str     r2, [sp, #44]
 ldrb    r2, [r1, #8]
 str     r2, [sp, #40]
 ldrb    r2, [r1, #9]
 str     r2, [sp, #36]
 ldrb    r2, [r1, #10]
 str     r2, [sp, #32]
 ldrb    r2, [r1, #11]
 str     r2, [sp, #28]
 ldrb    r2, [r1, #12]
 str     r2, [sp, #24]
 ldrb    r2, [r1, #13]
 str     r2, [sp, #20]
 ldrb    r2, [r1, #14]
 str     r2, [sp, #16]
 ldrb    r2, [r1, #15]
 str     r2, [sp, #12]
 ldrb    r2, [r1, #16]
 str     r2, [sp, #8]
 ldrb    r2, [r1, #17]
 str     r2, [sp, #4]
 ldrb    r2, [r1, #18]
 str     r2, [sp]
 ldrb.w  r11, [r1, #19]
 ldrb.w  r10, [r1, #20]
 ldrb.w  r9, [r1, #21]
 ldrb.w  r8, [r1, #22]
 ldrb    r7, [r1, #23]
 ldrb    r6, [r1, #24]
 ldrb    r5, [r1, #25]
 ldrb    r4, [r1, #26]
 ldrb.w  lr, [r1, #27]
 ldrb.w  r12, [r1, #28]
 ldrb    r3, [r1, #29]
 ldrb    r2, [r1, #30]
 ldrb    r1, [r1, #31]
 strb    r1, [r0, #31]
 ldr     r1, [sp]
 strb    r1, [r0, #18]
 ldr     r1, [sp, #4]
 strb    r1, [r0, #17]
 ldr     r1, [sp, #8]
 strb    r1, [r0, #16]
 ldr     r1, [sp, #12]
 strb    r1, [r0, #15]
 ldr     r1, [sp, #16]
 strb    r1, [r0, #14]
 ldr     r1, [sp, #20]
 strb    r1, [r0, #13]
 ldr     r1, [sp, #24]
 strb    r1, [r0, #12]
 ldr     r1, [sp, #28]
 strb    r1, [r0, #11]
 ldr     r1, [sp, #32]
 strb    r1, [r0, #10]
 ldr     r1, [sp, #36]
 strb    r1, [r0, #9]
 ldr     r1, [sp, #40]
 strb    r1, [r0, #8]
 ldr     r1, [sp, #44]
 strb    r1, [r0, #7]
 ldr     r1, [sp, #48]
 strb    r1, [r0, #6]
 ldr     r1, [sp, #52]
 strb    r1, [r0, #5]
 ldr     r1, [sp, #56]
 strb    r1, [r0, #4]
 ldr     r1, [sp, #60]
 strb    r1, [r0, #3]
 ldr     r1, [sp, #64]
 strb    r1, [r0, #2]
 ldr     r1, [sp, #68]
 strb    r1, [r0, #1]
 ldr     r1, [sp, #72]
 strb    r2, [r0, #30]
 strb    r3, [r0, #29]
 strb.w  r12, [r0, #28]
 strb.w  lr, [r0, #27]
 strb    r4, [r0, #26]
 strb    r5, [r0, #25]
 strb    r6, [r0, #24]
 strb    r7, [r0, #23]
 strb.w  r8, [r0, #22]
 strb.w  r9, [r0, #21]
 strb.w  r10, [r0, #20]
 strb.w  r11, [r0, #19]
 strb    r1, [r0]
 dmb     ish
 add     sp, #76
 pop.w   {r4, r5, r6, r7, r8, r9, r10, r11, pc}
