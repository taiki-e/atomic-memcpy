asm_test::atomic_memcpy_store_align2::release:
 push    {r4, lr}
 sub     sp, #64
 vld1.16 {d16, d17}, [r1]!
 add.w   lr, sp, #32
 vld1.16 {d18, d19}, [r1]
 mov     r1, sp
 mov     r2, r1
 vst1.64 {d16, d17}, [r2]!
 vst1.64 {d18, d19}, [r2]
 dmb     ish
 vld1.64 {d16, d17}, [r1]
 mov     r1, lr
 vld1.64 {d18, d19}, [r2]
 vst1.64 {d16, d17}, [r1]!
 vst1.64 {d18, d19}, [r1]
 adds    r1, r0, #3
 bic     r1, r1, #3
 sub.w   r12, r1, r0
 cmp.w   r12, #33
 bhs     .LBB6_3
 cmp     r1, r0
 bne     .LBB6_4
 movs    r3, #32
 mov.w   r12, #0
 b       .LBB6_7
.LBB6_3:
 ldrh.w  r1, [sp, #62]
 strh    r1, [r0, #30]
 ldrh.w  r1, [sp, #60]
 strh    r1, [r0, #28]
 ldrh.w  r1, [sp, #58]
 strh    r1, [r0, #26]
 ldrh.w  r1, [sp, #56]
 strh    r1, [r0, #24]
 ldrh.w  r1, [sp, #54]
 strh    r1, [r0, #22]
 ldrh.w  r1, [sp, #52]
 strh    r1, [r0, #20]
 ldrh.w  r1, [sp, #50]
 strh    r1, [r0, #18]
 ldrh.w  r1, [sp, #48]
 strh    r1, [r0, #16]
 ldrh.w  r1, [sp, #46]
 strh    r1, [r0, #14]
 ldrh.w  r1, [sp, #44]
 strh    r1, [r0, #12]
 ldrh.w  r1, [sp, #42]
 strh    r1, [r0, #10]
 ldrh.w  r1, [sp, #40]
 strh    r1, [r0, #8]
 ldrh.w  r1, [sp, #38]
 strh    r1, [r0, #6]
 ldrh.w  r1, [sp, #36]
 strh    r1, [r0, #4]
 ldrh.w  r1, [sp, #34]
 strh    r1, [r0, #2]
 ldrh.w  r1, [sp, #32]
 strh    r1, [r0]
 b       .LBB6_11
.LBB6_4:
 add     r3, sp, #32
 cmp.w   r12, #1
 it      ls
 movls.w r12, #1
 mov     r2, r12
 mov     r1, r0
.LBB6_5:
 ldrb    r4, [r3], #1
 subs    r2, #1
 strb    r4, [r1], #1
 bne     .LBB6_5
 rsb.w   r3, r12, #32
 cmp     r3, #4
 blo     .LBB6_8
.LBB6_7:
 ldr.w   r1, [lr, r12]
 subs    r3, #4
 cmp     r3, #3
 str.w   r1, [r0, r12]
 add.w   r12, r12, #4
 bhi     .LBB6_7
.LBB6_8:
 cbz     r3, .LBB6_11
 add.w   r1, lr, r12
 add     r0, r12
.LBB6_10:
 ldrb    r2, [r1], #1
 subs    r3, #1
 strb    r2, [r0], #1
 bne     .LBB6_10
.LBB6_11:
 add     sp, #64
 pop     {r4, pc}
asm_test::atomic_memcpy_store_align2::write_volatile_release_fence:
 sub     sp, #32
 dmb     ish
 vld1.16 {d16, d17}, [r1]!
 vld1.16 {d18, d19}, [r1]
 mov     r1, sp
 vst1.64 {d16, d17}, [r1]
 vld1.64 {d16, d17}, [r1]!
 vst1.64 {d18, d19}, [r1]
 vst1.16 {d16, d17}, [r0]
 adds    r0, #16
 vld1.64 {d16, d17}, [r1]
 vst1.16 {d16, d17}, [r0]
 add     sp, #32
 bx      lr
