asm_test::atomic_memcpy_store_align8::release:
 sub     rsp, 136
 movups  xmm0, xmmword, ptr, [rsi]
 movups  xmm1, xmmword, ptr, [rsi, +, 16]
 movups  xmm2, xmmword, ptr, [rsi, +, 32]
 movups  xmm3, xmmword, ptr, [rsi, +, 48]
 movaps  xmmword, ptr, [rsp, +, 112], xmm3
 movaps  xmmword, ptr, [rsp, +, 96], xmm2
 movaps  xmmword, ptr, [rsp, +, 80], xmm1
 movaps  xmmword, ptr, [rsp, +, 64], xmm0
 #MEMBARRIER
 movaps  xmm0, xmmword, ptr, [rsp, +, 64]
 movaps  xmm1, xmmword, ptr, [rsp, +, 80]
 movaps  xmm2, xmmword, ptr, [rsp, +, 96]
 movaps  xmm3, xmmword, ptr, [rsp, +, 112]
 movaps  xmmword, ptr, [rsp, +, 48], xmm3
 movaps  xmmword, ptr, [rsp, +, 32], xmm2
 movaps  xmmword, ptr, [rsp, +, 16], xmm1
 movaps  xmmword, ptr, [rsp], xmm0
 lea     r8, [rsp, +, 16]
 lea     rcx, [rsp, +, 32]
 lea     rdx, [rsp, +, 48]
 lea     rsi, [rdi, +, 56]
 lea     rax, [rsp, +, 56]
 #APP
 mov     rax, qword, ptr, [rax]
 mov     qword, ptr, [rsi], rax
 #NO_APP
 lea     rax, [rdi, +, 48]
 #APP
 mov     rdx, qword, ptr, [rdx]
 mov     qword, ptr, [rax], rdx
 #NO_APP
 lea     rax, [rdi, +, 40]
 lea     rdx, [rsp, +, 40]
 #APP
 mov     rdx, qword, ptr, [rdx]
 mov     qword, ptr, [rax], rdx
 #NO_APP
 lea     rax, [rdi, +, 32]
 #APP
 mov     rcx, qword, ptr, [rcx]
 mov     qword, ptr, [rax], rcx
 #NO_APP
 lea     rax, [rdi, +, 24]
 lea     rcx, [rsp, +, 24]
 #APP
 mov     rcx, qword, ptr, [rcx]
 mov     qword, ptr, [rax], rcx
 #NO_APP
 lea     rax, [rdi, +, 16]
 #APP
 mov     rcx, qword, ptr, [r8]
 mov     qword, ptr, [rax], rcx
 #NO_APP
 lea     rax, [rdi, +, 8]
 lea     rcx, [rsp, +, 8]
 #APP
 mov     rcx, qword, ptr, [rcx]
 mov     qword, ptr, [rax], rcx
 #NO_APP
 mov     rax, rsp
 #APP
 mov     rax, qword, ptr, [rax]
 mov     qword, ptr, [rdi], rax
 #NO_APP
 add     rsp, 136
 ret
asm_test::atomic_memcpy_store_align8::write_volatile_release_fence:
 sub     rsp, 72
 #MEMBARRIER
 movups  xmm0, xmmword, ptr, [rsi]
 movups  xmm1, xmmword, ptr, [rsi, +, 16]
 movups  xmm2, xmmword, ptr, [rsi, +, 32]
 movups  xmm3, xmmword, ptr, [rsi, +, 48]
 movaps  xmmword, ptr, [rsp, +, 48], xmm3
 movaps  xmmword, ptr, [rsp, +, 32], xmm2
 movaps  xmmword, ptr, [rsp, +, 16], xmm1
 movaps  xmmword, ptr, [rsp], xmm0
 movaps  xmm0, xmmword, ptr, [rsp, +, 48]
 movups  xmmword, ptr, [rdi, +, 48], xmm0
 movaps  xmm0, xmmword, ptr, [rsp, +, 32]
 movups  xmmword, ptr, [rdi, +, 32], xmm0
 movaps  xmm0, xmmword, ptr, [rsp, +, 16]
 movups  xmmword, ptr, [rdi, +, 16], xmm0
 movaps  xmm0, xmmword, ptr, [rsp]
 movups  xmmword, ptr, [rdi], xmm0
 add     rsp, 72
 ret
