asm_test::atomic_memcpy_store_align2::release:
 sub     rsp, 136
 movups  xmm0, xmmword, ptr, [rsi]
 movups  xmm1, xmmword, ptr, [rsi, +, 16]
 movups  xmm2, xmmword, ptr, [rsi, +, 32]
 movups  xmm3, xmmword, ptr, [rsi, +, 48]
 movaps  xmmword, ptr, [rsp, +, 112], xmm3
 movaps  xmmword, ptr, [rsp, +, 96], xmm2
 movaps  xmmword, ptr, [rsp, +, 80], xmm1
 movaps  xmmword, ptr, [rsp, +, 64], xmm0
 #MEMBARRIER
 movaps  xmm0, xmmword, ptr, [rsp, +, 64]
 movaps  xmm1, xmmword, ptr, [rsp, +, 80]
 movaps  xmm2, xmmword, ptr, [rsp, +, 96]
 movaps  xmm3, xmmword, ptr, [rsp, +, 112]
 movaps  xmmword, ptr, [rsp, +, 48], xmm3
 movaps  xmmword, ptr, [rsp, +, 32], xmm2
 movaps  xmmword, ptr, [rsp, +, 16], xmm1
 movaps  xmmword, ptr, [rsp], xmm0
 lea     r8, [rsp, +, 16]
 lea     rcx, [rsp, +, 32]
 lea     rdx, [rsp, +, 48]
 lea     rsi, [rdi, +, 62]
 lea     rax, [rsp, +, 62]
 #APP
 mov     ax, word, ptr, [rax]
 mov     word, ptr, [rsi], ax
 #NO_APP
 lea     rax, [rdi, +, 60]
 lea     rsi, [rsp, +, 60]
 #APP
 mov     ax, word, ptr, [rsi]
 mov     word, ptr, [rax], ax
 #NO_APP
 lea     rax, [rdi, +, 58]
 lea     rsi, [rsp, +, 58]
 #APP
 mov     ax, word, ptr, [rsi]
 mov     word, ptr, [rax], ax
 #NO_APP
 lea     rax, [rdi, +, 56]
 lea     rsi, [rsp, +, 56]
 #APP
 mov     ax, word, ptr, [rsi]
 mov     word, ptr, [rax], ax
 #NO_APP
 lea     rax, [rdi, +, 54]
 lea     rsi, [rsp, +, 54]
 #APP
 mov     ax, word, ptr, [rsi]
 mov     word, ptr, [rax], ax
 #NO_APP
 lea     rax, [rdi, +, 52]
 lea     rsi, [rsp, +, 52]
 #APP
 mov     ax, word, ptr, [rsi]
 mov     word, ptr, [rax], ax
 #NO_APP
 lea     rax, [rdi, +, 50]
 lea     rsi, [rsp, +, 50]
 #APP
 mov     ax, word, ptr, [rsi]
 mov     word, ptr, [rax], ax
 #NO_APP
 lea     rax, [rdi, +, 48]
 #APP
 mov     ax, word, ptr, [rdx]
 mov     word, ptr, [rax], ax
 #NO_APP
 lea     rax, [rdi, +, 46]
 lea     rdx, [rsp, +, 46]
 #APP
 mov     ax, word, ptr, [rdx]
 mov     word, ptr, [rax], ax
 #NO_APP
 lea     rax, [rdi, +, 44]
 lea     rdx, [rsp, +, 44]
 #APP
 mov     ax, word, ptr, [rdx]
 mov     word, ptr, [rax], ax
 #NO_APP
 lea     rax, [rdi, +, 42]
 lea     rdx, [rsp, +, 42]
 #APP
 mov     ax, word, ptr, [rdx]
 mov     word, ptr, [rax], ax
 #NO_APP
 lea     rax, [rdi, +, 40]
 lea     rdx, [rsp, +, 40]
 #APP
 mov     ax, word, ptr, [rdx]
 mov     word, ptr, [rax], ax
 #NO_APP
 lea     rax, [rdi, +, 38]
 lea     rdx, [rsp, +, 38]
 #APP
 mov     ax, word, ptr, [rdx]
 mov     word, ptr, [rax], ax
 #NO_APP
 lea     rax, [rdi, +, 36]
 lea     rdx, [rsp, +, 36]
 #APP
 mov     ax, word, ptr, [rdx]
 mov     word, ptr, [rax], ax
 #NO_APP
 lea     rax, [rdi, +, 34]
 lea     rdx, [rsp, +, 34]
 #APP
 mov     ax, word, ptr, [rdx]
 mov     word, ptr, [rax], ax
 #NO_APP
 lea     rax, [rdi, +, 32]
 #APP
 mov     ax, word, ptr, [rcx]
 mov     word, ptr, [rax], ax
 #NO_APP
 lea     rax, [rdi, +, 30]
 lea     rcx, [rsp, +, 30]
 #APP
 mov     ax, word, ptr, [rcx]
 mov     word, ptr, [rax], ax
 #NO_APP
 lea     rax, [rdi, +, 28]
 lea     rcx, [rsp, +, 28]
 #APP
 mov     ax, word, ptr, [rcx]
 mov     word, ptr, [rax], ax
 #NO_APP
 lea     rax, [rdi, +, 26]
 lea     rcx, [rsp, +, 26]
 #APP
 mov     ax, word, ptr, [rcx]
 mov     word, ptr, [rax], ax
 #NO_APP
 lea     rax, [rdi, +, 24]
 lea     rcx, [rsp, +, 24]
 #APP
 mov     ax, word, ptr, [rcx]
 mov     word, ptr, [rax], ax
 #NO_APP
 lea     rax, [rdi, +, 22]
 lea     rcx, [rsp, +, 22]
 #APP
 mov     ax, word, ptr, [rcx]
 mov     word, ptr, [rax], ax
 #NO_APP
 lea     rax, [rdi, +, 20]
 lea     rcx, [rsp, +, 20]
 #APP
 mov     ax, word, ptr, [rcx]
 mov     word, ptr, [rax], ax
 #NO_APP
 lea     rax, [rdi, +, 18]
 lea     rcx, [rsp, +, 18]
 #APP
 mov     ax, word, ptr, [rcx]
 mov     word, ptr, [rax], ax
 #NO_APP
 lea     rax, [rdi, +, 16]
 #APP
 mov     ax, word, ptr, [r8]
 mov     word, ptr, [rax], ax
 #NO_APP
 lea     rax, [rdi, +, 14]
 lea     rcx, [rsp, +, 14]
 #APP
 mov     ax, word, ptr, [rcx]
 mov     word, ptr, [rax], ax
 #NO_APP
 lea     rax, [rdi, +, 12]
 lea     rcx, [rsp, +, 12]
 #APP
 mov     ax, word, ptr, [rcx]
 mov     word, ptr, [rax], ax
 #NO_APP
 lea     rax, [rdi, +, 10]
 lea     rcx, [rsp, +, 10]
 #APP
 mov     ax, word, ptr, [rcx]
 mov     word, ptr, [rax], ax
 #NO_APP
 lea     rax, [rdi, +, 8]
 lea     rcx, [rsp, +, 8]
 #APP
 mov     ax, word, ptr, [rcx]
 mov     word, ptr, [rax], ax
 #NO_APP
 lea     rax, [rdi, +, 6]
 lea     rcx, [rsp, +, 6]
 #APP
 mov     ax, word, ptr, [rcx]
 mov     word, ptr, [rax], ax
 #NO_APP
 lea     rax, [rdi, +, 4]
 lea     rcx, [rsp, +, 4]
 #APP
 mov     ax, word, ptr, [rcx]
 mov     word, ptr, [rax], ax
 #NO_APP
 lea     rax, [rdi, +, 2]
 lea     rcx, [rsp, +, 2]
 #APP
 mov     ax, word, ptr, [rcx]
 mov     word, ptr, [rax], ax
 #NO_APP
 mov     rax, rsp
 #APP
 mov     ax, word, ptr, [rax]
 mov     word, ptr, [rdi], ax
 #NO_APP
 add     rsp, 136
 ret
asm_test::atomic_memcpy_store_align2::write_volatile_release_fence:
 sub     rsp, 72
 #MEMBARRIER
 movups  xmm0, xmmword, ptr, [rsi]
 movups  xmm1, xmmword, ptr, [rsi, +, 16]
 movups  xmm2, xmmword, ptr, [rsi, +, 32]
 movups  xmm3, xmmword, ptr, [rsi, +, 48]
 movaps  xmmword, ptr, [rsp, +, 48], xmm3
 movaps  xmmword, ptr, [rsp, +, 32], xmm2
 movaps  xmmword, ptr, [rsp, +, 16], xmm1
 movaps  xmmword, ptr, [rsp], xmm0
 movaps  xmm0, xmmword, ptr, [rsp, +, 48]
 movups  xmmword, ptr, [rdi, +, 48], xmm0
 movaps  xmm0, xmmword, ptr, [rsp, +, 32]
 movups  xmmword, ptr, [rdi, +, 32], xmm0
 movaps  xmm0, xmmword, ptr, [rsp, +, 16]
 movups  xmmword, ptr, [rdi, +, 16], xmm0
 movaps  xmm0, xmmword, ptr, [rsp]
 movups  xmmword, ptr, [rdi], xmm0
 add     rsp, 72
 ret
