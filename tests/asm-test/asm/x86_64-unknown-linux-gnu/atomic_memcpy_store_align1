asm_test::atomic_memcpy_store_align1::release:
 sub     rsp, 136
 movups  xmm0, xmmword, ptr, [rsi]
 movups  xmm1, xmmword, ptr, [rsi, +, 16]
 movups  xmm2, xmmword, ptr, [rsi, +, 32]
 movups  xmm3, xmmword, ptr, [rsi, +, 48]
 movaps  xmmword, ptr, [rsp, +, 112], xmm3
 movaps  xmmword, ptr, [rsp, +, 96], xmm2
 movaps  xmmword, ptr, [rsp, +, 80], xmm1
 movaps  xmmword, ptr, [rsp, +, 64], xmm0
 #MEMBARRIER
 movaps  xmm0, xmmword, ptr, [rsp, +, 64]
 movaps  xmm1, xmmword, ptr, [rsp, +, 80]
 movaps  xmm2, xmmword, ptr, [rsp, +, 96]
 movaps  xmm3, xmmword, ptr, [rsp, +, 112]
 movaps  xmmword, ptr, [rsp, +, 48], xmm3
 movaps  xmmword, ptr, [rsp, +, 32], xmm2
 movaps  xmmword, ptr, [rsp, +, 16], xmm1
 movaps  xmmword, ptr, [rsp], xmm0
 lea     r8, [rsp, +, 16]
 lea     r9, [rsp, +, 32]
 lea     rdx, [rsp, +, 48]
 lea     rsi, [rdi, +, 63]
 lea     rax, [rsp, +, 63]
 #APP
 mov     al, byte, ptr, [rax]
 mov     byte, ptr, [rsi], al
 #NO_APP
 lea     rax, [rdi, +, 62]
 lea     rsi, [rsp, +, 62]
 #APP
 mov     cl, byte, ptr, [rsi]
 mov     byte, ptr, [rax], cl
 #NO_APP
 lea     rax, [rdi, +, 61]
 lea     rcx, [rsp, +, 61]
 #APP
 mov     cl, byte, ptr, [rcx]
 mov     byte, ptr, [rax], cl
 #NO_APP
 lea     rax, [rdi, +, 60]
 lea     rcx, [rsp, +, 60]
 #APP
 mov     cl, byte, ptr, [rcx]
 mov     byte, ptr, [rax], cl
 #NO_APP
 lea     rax, [rdi, +, 59]
 lea     rcx, [rsp, +, 59]
 #APP
 mov     cl, byte, ptr, [rcx]
 mov     byte, ptr, [rax], cl
 #NO_APP
 lea     rax, [rdi, +, 58]
 lea     rcx, [rsp, +, 58]
 #APP
 mov     cl, byte, ptr, [rcx]
 mov     byte, ptr, [rax], cl
 #NO_APP
 lea     rax, [rdi, +, 57]
 lea     rcx, [rsp, +, 57]
 #APP
 mov     cl, byte, ptr, [rcx]
 mov     byte, ptr, [rax], cl
 #NO_APP
 lea     rax, [rdi, +, 56]
 lea     rcx, [rsp, +, 56]
 #APP
 mov     cl, byte, ptr, [rcx]
 mov     byte, ptr, [rax], cl
 #NO_APP
 lea     rax, [rdi, +, 55]
 lea     rcx, [rsp, +, 55]
 #APP
 mov     cl, byte, ptr, [rcx]
 mov     byte, ptr, [rax], cl
 #NO_APP
 lea     rax, [rdi, +, 54]
 lea     rcx, [rsp, +, 54]
 #APP
 mov     cl, byte, ptr, [rcx]
 mov     byte, ptr, [rax], cl
 #NO_APP
 lea     rax, [rdi, +, 53]
 lea     rcx, [rsp, +, 53]
 #APP
 mov     cl, byte, ptr, [rcx]
 mov     byte, ptr, [rax], cl
 #NO_APP
 lea     rax, [rdi, +, 52]
 lea     rcx, [rsp, +, 52]
 #APP
 mov     cl, byte, ptr, [rcx]
 mov     byte, ptr, [rax], cl
 #NO_APP
 lea     rax, [rdi, +, 51]
 lea     rcx, [rsp, +, 51]
 #APP
 mov     cl, byte, ptr, [rcx]
 mov     byte, ptr, [rax], cl
 #NO_APP
 lea     rax, [rdi, +, 50]
 lea     rcx, [rsp, +, 50]
 #APP
 mov     cl, byte, ptr, [rcx]
 mov     byte, ptr, [rax], cl
 #NO_APP
 lea     rax, [rdi, +, 49]
 lea     rcx, [rsp, +, 49]
 #APP
 mov     cl, byte, ptr, [rcx]
 mov     byte, ptr, [rax], cl
 #NO_APP
 lea     rax, [rdi, +, 48]
 #APP
 mov     cl, byte, ptr, [rdx]
 mov     byte, ptr, [rax], cl
 #NO_APP
 lea     rax, [rdi, +, 47]
 lea     rcx, [rsp, +, 47]
 #APP
 mov     cl, byte, ptr, [rcx]
 mov     byte, ptr, [rax], cl
 #NO_APP
 lea     rax, [rdi, +, 46]
 lea     rcx, [rsp, +, 46]
 #APP
 mov     cl, byte, ptr, [rcx]
 mov     byte, ptr, [rax], cl
 #NO_APP
 lea     rax, [rdi, +, 45]
 lea     rcx, [rsp, +, 45]
 #APP
 mov     cl, byte, ptr, [rcx]
 mov     byte, ptr, [rax], cl
 #NO_APP
 lea     rax, [rdi, +, 44]
 lea     rcx, [rsp, +, 44]
 #APP
 mov     cl, byte, ptr, [rcx]
 mov     byte, ptr, [rax], cl
 #NO_APP
 lea     rax, [rdi, +, 43]
 lea     rcx, [rsp, +, 43]
 #APP
 mov     cl, byte, ptr, [rcx]
 mov     byte, ptr, [rax], cl
 #NO_APP
 lea     rax, [rdi, +, 42]
 lea     rcx, [rsp, +, 42]
 #APP
 mov     cl, byte, ptr, [rcx]
 mov     byte, ptr, [rax], cl
 #NO_APP
 lea     rax, [rdi, +, 41]
 lea     rcx, [rsp, +, 41]
 #APP
 mov     cl, byte, ptr, [rcx]
 mov     byte, ptr, [rax], cl
 #NO_APP
 lea     rax, [rdi, +, 40]
 lea     rcx, [rsp, +, 40]
 #APP
 mov     cl, byte, ptr, [rcx]
 mov     byte, ptr, [rax], cl
 #NO_APP
 lea     rax, [rdi, +, 39]
 lea     rcx, [rsp, +, 39]
 #APP
 mov     cl, byte, ptr, [rcx]
 mov     byte, ptr, [rax], cl
 #NO_APP
 lea     rax, [rdi, +, 38]
 lea     rcx, [rsp, +, 38]
 #APP
 mov     cl, byte, ptr, [rcx]
 mov     byte, ptr, [rax], cl
 #NO_APP
 lea     rax, [rdi, +, 37]
 lea     rcx, [rsp, +, 37]
 #APP
 mov     cl, byte, ptr, [rcx]
 mov     byte, ptr, [rax], cl
 #NO_APP
 lea     rax, [rdi, +, 36]
 lea     rcx, [rsp, +, 36]
 #APP
 mov     cl, byte, ptr, [rcx]
 mov     byte, ptr, [rax], cl
 #NO_APP
 lea     rax, [rdi, +, 35]
 lea     rcx, [rsp, +, 35]
 #APP
 mov     cl, byte, ptr, [rcx]
 mov     byte, ptr, [rax], cl
 #NO_APP
 lea     rax, [rdi, +, 34]
 lea     rcx, [rsp, +, 34]
 #APP
 mov     cl, byte, ptr, [rcx]
 mov     byte, ptr, [rax], cl
 #NO_APP
 lea     rax, [rdi, +, 33]
 lea     rcx, [rsp, +, 33]
 #APP
 mov     cl, byte, ptr, [rcx]
 mov     byte, ptr, [rax], cl
 #NO_APP
 lea     rax, [rdi, +, 32]
 #APP
 mov     cl, byte, ptr, [r9]
 mov     byte, ptr, [rax], cl
 #NO_APP
 lea     rax, [rdi, +, 31]
 lea     rcx, [rsp, +, 31]
 #APP
 mov     cl, byte, ptr, [rcx]
 mov     byte, ptr, [rax], cl
 #NO_APP
 lea     rax, [rdi, +, 30]
 lea     rcx, [rsp, +, 30]
 #APP
 mov     cl, byte, ptr, [rcx]
 mov     byte, ptr, [rax], cl
 #NO_APP
 lea     rax, [rdi, +, 29]
 lea     rcx, [rsp, +, 29]
 #APP
 mov     cl, byte, ptr, [rcx]
 mov     byte, ptr, [rax], cl
 #NO_APP
 lea     rax, [rdi, +, 28]
 lea     rcx, [rsp, +, 28]
 #APP
 mov     cl, byte, ptr, [rcx]
 mov     byte, ptr, [rax], cl
 #NO_APP
 lea     rax, [rdi, +, 27]
 lea     rcx, [rsp, +, 27]
 #APP
 mov     cl, byte, ptr, [rcx]
 mov     byte, ptr, [rax], cl
 #NO_APP
 lea     rax, [rdi, +, 26]
 lea     rcx, [rsp, +, 26]
 #APP
 mov     cl, byte, ptr, [rcx]
 mov     byte, ptr, [rax], cl
 #NO_APP
 lea     rax, [rdi, +, 25]
 lea     rcx, [rsp, +, 25]
 #APP
 mov     cl, byte, ptr, [rcx]
 mov     byte, ptr, [rax], cl
 #NO_APP
 lea     rax, [rdi, +, 24]
 lea     rcx, [rsp, +, 24]
 #APP
 mov     cl, byte, ptr, [rcx]
 mov     byte, ptr, [rax], cl
 #NO_APP
 lea     rax, [rdi, +, 23]
 lea     rcx, [rsp, +, 23]
 #APP
 mov     cl, byte, ptr, [rcx]
 mov     byte, ptr, [rax], cl
 #NO_APP
 lea     rax, [rdi, +, 22]
 lea     rcx, [rsp, +, 22]
 #APP
 mov     cl, byte, ptr, [rcx]
 mov     byte, ptr, [rax], cl
 #NO_APP
 lea     rax, [rdi, +, 21]
 lea     rcx, [rsp, +, 21]
 #APP
 mov     cl, byte, ptr, [rcx]
 mov     byte, ptr, [rax], cl
 #NO_APP
 lea     rax, [rdi, +, 20]
 lea     rcx, [rsp, +, 20]
 #APP
 mov     cl, byte, ptr, [rcx]
 mov     byte, ptr, [rax], cl
 #NO_APP
 lea     rax, [rdi, +, 19]
 lea     rcx, [rsp, +, 19]
 #APP
 mov     cl, byte, ptr, [rcx]
 mov     byte, ptr, [rax], cl
 #NO_APP
 lea     rax, [rdi, +, 18]
 lea     rcx, [rsp, +, 18]
 #APP
 mov     cl, byte, ptr, [rcx]
 mov     byte, ptr, [rax], cl
 #NO_APP
 lea     rax, [rdi, +, 17]
 lea     rcx, [rsp, +, 17]
 #APP
 mov     cl, byte, ptr, [rcx]
 mov     byte, ptr, [rax], cl
 #NO_APP
 lea     rax, [rdi, +, 16]
 #APP
 mov     cl, byte, ptr, [r8]
 mov     byte, ptr, [rax], cl
 #NO_APP
 lea     rax, [rdi, +, 15]
 lea     rcx, [rsp, +, 15]
 #APP
 mov     cl, byte, ptr, [rcx]
 mov     byte, ptr, [rax], cl
 #NO_APP
 lea     rax, [rdi, +, 14]
 lea     rcx, [rsp, +, 14]
 #APP
 mov     cl, byte, ptr, [rcx]
 mov     byte, ptr, [rax], cl
 #NO_APP
 lea     rax, [rdi, +, 13]
 lea     rcx, [rsp, +, 13]
 #APP
 mov     cl, byte, ptr, [rcx]
 mov     byte, ptr, [rax], cl
 #NO_APP
 lea     rax, [rdi, +, 12]
 lea     rcx, [rsp, +, 12]
 #APP
 mov     cl, byte, ptr, [rcx]
 mov     byte, ptr, [rax], cl
 #NO_APP
 lea     rax, [rdi, +, 11]
 lea     rcx, [rsp, +, 11]
 #APP
 mov     cl, byte, ptr, [rcx]
 mov     byte, ptr, [rax], cl
 #NO_APP
 lea     rax, [rdi, +, 10]
 lea     rcx, [rsp, +, 10]
 #APP
 mov     cl, byte, ptr, [rcx]
 mov     byte, ptr, [rax], cl
 #NO_APP
 lea     rax, [rdi, +, 9]
 lea     rcx, [rsp, +, 9]
 #APP
 mov     cl, byte, ptr, [rcx]
 mov     byte, ptr, [rax], cl
 #NO_APP
 lea     rax, [rdi, +, 8]
 lea     rcx, [rsp, +, 8]
 #APP
 mov     cl, byte, ptr, [rcx]
 mov     byte, ptr, [rax], cl
 #NO_APP
 lea     rax, [rdi, +, 7]
 lea     rcx, [rsp, +, 7]
 #APP
 mov     cl, byte, ptr, [rcx]
 mov     byte, ptr, [rax], cl
 #NO_APP
 lea     rax, [rdi, +, 6]
 lea     rcx, [rsp, +, 6]
 #APP
 mov     cl, byte, ptr, [rcx]
 mov     byte, ptr, [rax], cl
 #NO_APP
 lea     rax, [rdi, +, 5]
 lea     rcx, [rsp, +, 5]
 #APP
 mov     cl, byte, ptr, [rcx]
 mov     byte, ptr, [rax], cl
 #NO_APP
 lea     rax, [rdi, +, 4]
 lea     rcx, [rsp, +, 4]
 #APP
 mov     cl, byte, ptr, [rcx]
 mov     byte, ptr, [rax], cl
 #NO_APP
 lea     rax, [rdi, +, 3]
 lea     rcx, [rsp, +, 3]
 #APP
 mov     cl, byte, ptr, [rcx]
 mov     byte, ptr, [rax], cl
 #NO_APP
 lea     rax, [rdi, +, 2]
 lea     rcx, [rsp, +, 2]
 #APP
 mov     cl, byte, ptr, [rcx]
 mov     byte, ptr, [rax], cl
 #NO_APP
 lea     rax, [rdi, +, 1]
 lea     rcx, [rsp, +, 1]
 #APP
 mov     cl, byte, ptr, [rcx]
 mov     byte, ptr, [rax], cl
 #NO_APP
 mov     rax, rsp
 #APP
 mov     al, byte, ptr, [rax]
 mov     byte, ptr, [rdi], al
 #NO_APP
 add     rsp, 136
 ret
asm_test::atomic_memcpy_store_align1::write_volatile_release_fence:
 sub     rsp, 72
 #MEMBARRIER
 movups  xmm0, xmmword, ptr, [rsi]
 movups  xmm1, xmmword, ptr, [rsi, +, 16]
 movups  xmm2, xmmword, ptr, [rsi, +, 32]
 movups  xmm3, xmmword, ptr, [rsi, +, 48]
 movaps  xmmword, ptr, [rsp, +, 48], xmm3
 movaps  xmmword, ptr, [rsp, +, 32], xmm2
 movaps  xmmword, ptr, [rsp, +, 16], xmm1
 movaps  xmmword, ptr, [rsp], xmm0
 movaps  xmm0, xmmword, ptr, [rsp, +, 48]
 movups  xmmword, ptr, [rdi, +, 48], xmm0
 movaps  xmm0, xmmword, ptr, [rsp, +, 32]
 movups  xmmword, ptr, [rdi, +, 32], xmm0
 movaps  xmm0, xmmword, ptr, [rsp, +, 16]
 movups  xmmword, ptr, [rdi, +, 16], xmm0
 movaps  xmm0, xmmword, ptr, [rsp]
 movups  xmmword, ptr, [rdi], xmm0
 add     rsp, 72
 ret
