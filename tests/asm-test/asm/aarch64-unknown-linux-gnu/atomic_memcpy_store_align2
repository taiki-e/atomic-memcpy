asm_test::atomic_memcpy_store_align2::release:
 ldp     q0, q1, [x1]
 ldp     q2, q3, [x1, #32]
 stp     q0, q1, [sp, #-128]!
 stp     q2, q3, [sp, #32]
 dmb     ish
 ldp     q0, q1, [sp]
 add     x8, x0, #7
 and     x9, x8, #0xfffffffffffffff8
 sub     x8, x9, x0
 stp     q0, q1, [sp, #64]
 ldp     q0, q1, [sp, #32]
 cmp     x8, #64
 stp     q0, q1, [sp, #96]
 b.ls    .LBB6_2
 ldrh    w8, [sp, #126]
 strh    w8, [x0, #62]
 ldrh    w8, [sp, #124]
 strh    w8, [x0, #60]
 ldrh    w8, [sp, #122]
 strh    w8, [x0, #58]
 ldrh    w8, [sp, #120]
 strh    w8, [x0, #56]
 ldrh    w8, [sp, #118]
 strh    w8, [x0, #54]
 ldrh    w8, [sp, #116]
 strh    w8, [x0, #52]
 ldrh    w8, [sp, #114]
 strh    w8, [x0, #50]
 ldrh    w8, [sp, #112]
 strh    w8, [x0, #48]
 ldrh    w8, [sp, #110]
 strh    w8, [x0, #46]
 ldrh    w8, [sp, #108]
 strh    w8, [x0, #44]
 ldrh    w8, [sp, #106]
 strh    w8, [x0, #42]
 ldrh    w8, [sp, #104]
 strh    w8, [x0, #40]
 ldrh    w8, [sp, #102]
 strh    w8, [x0, #38]
 ldrh    w8, [sp, #100]
 strh    w8, [x0, #36]
 ldrh    w8, [sp, #98]
 strh    w8, [x0, #34]
 ldrh    w8, [sp, #96]
 strh    w8, [x0, #32]
 ldrh    w8, [sp, #94]
 strh    w8, [x0, #30]
 ldrh    w8, [sp, #92]
 strh    w8, [x0, #28]
 ldrh    w8, [sp, #90]
 strh    w8, [x0, #26]
 ldrh    w8, [sp, #88]
 strh    w8, [x0, #24]
 ldrh    w8, [sp, #86]
 strh    w8, [x0, #22]
 ldrh    w8, [sp, #84]
 strh    w8, [x0, #20]
 ldrh    w8, [sp, #82]
 strh    w8, [x0, #18]
 ldrh    w8, [sp, #80]
 strh    w8, [x0, #16]
 ldrh    w8, [sp, #78]
 strh    w8, [x0, #14]
 ldrh    w8, [sp, #76]
 strh    w8, [x0, #12]
 ldrh    w8, [sp, #74]
 strh    w8, [x0, #10]
 ldrh    w8, [sp, #72]
 strh    w8, [x0, #8]
 ldrh    w8, [sp, #70]
 strh    w8, [x0, #6]
 ldrh    w8, [sp, #68]
 strh    w8, [x0, #4]
 ldrh    w8, [sp, #66]
 strh    w8, [x0, #2]
 ldrh    w8, [sp, #64]
 strh    w8, [x0]
 b       .LBB6_12
.LBB6_2:
 cbz     x8, .LBB6_6
 sub     x9, x0, x9
 add     x10, sp, #64
 mov     x11, x9
 mov     x12, x0
.LBB6_4:
 ldrb    w13, [x10], #1
 adds    x11, x11, #1
 strb    w13, [x12], #1
 b.lo    .LBB6_4
 add     x9, x9, #64
 cmp     x9, #8
 b.hs    .LBB6_7
 b       .LBB6_9
.LBB6_6:
 mov     w9, #64
.LBB6_7:
 add     x10, sp, #64
.LBB6_8:
 ldr     x11, [x10, x8]
 sub     x9, x9, #8
 cmp     x9, #7
 str     x11, [x0, x8]
 add     x8, x8, #8
 b.hi    .LBB6_8
.LBB6_9:
 cbz     x9, .LBB6_12
 add     x11, sp, #64
 add     x10, x0, x8
 add     x8, x11, x8
.LBB6_11:
 ldrb    w11, [x8], #1
 subs    x9, x9, #1
 strb    w11, [x10], #1
 b.ne    .LBB6_11
.LBB6_12:
 add     sp, sp, #128
 ret
asm_test::atomic_memcpy_store_align2::write_volatile_release_fence:
 sub     sp, sp, #64
 dmb     ish
 ldp     q0, q1, [x1, #32]
 ldp     q3, q2, [x1]
 stp     q0, q1, [sp, #32]
 stp     q3, q2, [sp]
 ldr     q0, [sp, #16]
 ldr     q1, [sp, #32]
 ldr     q2, [sp, #48]
 ldr     q3, [sp]
 str     q3, [x0]
 str     q2, [x0, #48]
 str     q1, [x0, #32]
 str     q0, [x0, #16]
 add     sp, sp, #64
 ret
